// Generated by view binder compiler. Do not edit!
package com.bishang366.databinding;

import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import android.support.v7.widget.RecyclerView;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.viewbinding.ViewBinding;
import android.widget.LinearLayout;
import android.widget.TextView;
import com.bishang366.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogFragmentCompensationBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView btnCancel;

  @NonNull
  public final View divider;

  @NonNull
  public final LinearLayout llContainer;

  @NonNull
  public final RecyclerView rvCurrent;

  @NonNull
  public final TextView title;

  private DialogFragmentCompensationBinding(@NonNull LinearLayout rootView,
      @NonNull TextView btnCancel, @NonNull View divider, @NonNull LinearLayout llContainer,
      @NonNull RecyclerView rvCurrent, @NonNull TextView title) {
    this.rootView = rootView;
    this.btnCancel = btnCancel;
    this.divider = divider;
    this.llContainer = llContainer;
    this.rvCurrent = rvCurrent;
    this.title = title;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogFragmentCompensationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogFragmentCompensationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_fragment_compensation, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogFragmentCompensationBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    String missingId;
    missingId: {
      TextView btnCancel = rootView.findViewById(R.id.btnCancel);
      if (btnCancel == null) {
        missingId = "btnCancel";
        break missingId;
      }
      View divider = rootView.findViewById(R.id.divider);
      if (divider == null) {
        missingId = "divider";
        break missingId;
      }
      LinearLayout llContainer = rootView.findViewById(R.id.llContainer);
      if (llContainer == null) {
        missingId = "llContainer";
        break missingId;
      }
      RecyclerView rvCurrent = rootView.findViewById(R.id.rv_current);
      if (rvCurrent == null) {
        missingId = "rvCurrent";
        break missingId;
      }
      TextView title = rootView.findViewById(R.id.title);
      if (title == null) {
        missingId = "title";
        break missingId;
      }
      return new DialogFragmentCompensationBinding((LinearLayout) rootView, btnCancel, divider,
          llContainer, rvCurrent, title);
    }
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
