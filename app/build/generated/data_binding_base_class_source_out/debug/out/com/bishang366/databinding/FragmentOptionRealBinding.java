// Generated by view binder compiler. Do not edit!
package com.bishang366.databinding;

import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import android.support.v7.widget.RecyclerView;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.viewbinding.ViewBinding;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.SeekBar;
import android.widget.TextView;
import com.bishang366.R;
import com.bishang366.ui.kline.kline.KLineView;
import com.scwang.smart.refresh.layout.SmartRefreshLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentOptionRealBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final RelativeLayout bottom;

  @NonNull
  public final TextView btnToLogin;

  @NonNull
  public final Button buFall;

  @NonNull
  public final TextView buInventory;

  @NonNull
  public final Button buRise;

  @NonNull
  public final View currentTrustUnderline;

  @NonNull
  public final View dealTrustUnderline;

  @NonNull
  public final View historyTrustUnderline;

  @NonNull
  public final ImageButton ibBack;

  @NonNull
  public final ImageView ibMessage;

  @NonNull
  public final ImageButton ibOpen;

  @NonNull
  public final TextView ibRegist;

  @NonNull
  public final TextView installments;

  @NonNull
  public final KLineView klineView;

  @NonNull
  public final LinearLayout llCurrent;

  @NonNull
  public final LinearLayout llCurrent0;

  @NonNull
  public final LinearLayout llCurrentTrust;

  @NonNull
  public final LinearLayout llDeal;

  @NonNull
  public final LinearLayout llDealTrust;

  @NonNull
  public final LinearLayout llHistory;

  @NonNull
  public final LinearLayout llHistoryTrust;

  @NonNull
  public final LinearLayout llK;

  @NonNull
  public final LinearLayout llOneCurrent;

  @NonNull
  public final RelativeLayout llRoot;

  @NonNull
  public final LinearLayout llTitle;

  @NonNull
  public final TextView mTvseven;

  @NonNull
  public final TextView nowFive;

  @NonNull
  public final TextView nowFour;

  @NonNull
  public final TextView nowOne;

  @NonNull
  public final TextView nowSix;

  @NonNull
  public final TextView nowThree;

  @NonNull
  public final TextView nowTwo;

  @NonNull
  public final SmartRefreshLayout refreshCurrent;

  @NonNull
  public final RecyclerView rvAmount;

  @NonNull
  public final RecyclerView rvCurrent;

  @NonNull
  public final RecyclerView rvHistory;

  @NonNull
  public final SeekBar seekbar;

  @NonNull
  public final SmartRefreshLayout smartrefreshLayout;

  @NonNull
  public final LinearLayout tabTime;

  @NonNull
  public final RelativeLayout textToAll;

  @NonNull
  public final TextView tvAmount;

  @NonNull
  public final TextView tvAmount2;

  @NonNull
  public final TextView tvBuy;

  @NonNull
  public final TextView tvBuy2;

  @NonNull
  public final TextView tvCompensation;

  @NonNull
  public final TextView tvCurrentTrust;

  @NonNull
  public final TextView tvDealTrust;

  @NonNull
  public final TextView tvExpect;

  @NonNull
  public final TextView tvExpect2;

  @NonNull
  public final TextView tvHistoryTrust;

  @NonNull
  public final TextView tvNowPrice;

  @NonNull
  public final TextView tvOpenPrice;

  @NonNull
  public final TextView tvPercent;

  @NonNull
  public final TextView tvSell;

  @NonNull
  public final TextView tvSell2;

  @NonNull
  public final TextView tvTime;

  @NonNull
  public final TextView tvTime2;

  @NonNull
  public final TextView tvTimeCurrent;

  @NonNull
  public final TextView tvTitle;

  @NonNull
  public final TextView tvUseMoney;

  @NonNull
  public final View viewBack;

  @NonNull
  public final View viewLine;

  private FragmentOptionRealBinding(@NonNull RelativeLayout rootView,
      @NonNull RelativeLayout bottom, @NonNull TextView btnToLogin, @NonNull Button buFall,
      @NonNull TextView buInventory, @NonNull Button buRise, @NonNull View currentTrustUnderline,
      @NonNull View dealTrustUnderline, @NonNull View historyTrustUnderline,
      @NonNull ImageButton ibBack, @NonNull ImageView ibMessage, @NonNull ImageButton ibOpen,
      @NonNull TextView ibRegist, @NonNull TextView installments, @NonNull KLineView klineView,
      @NonNull LinearLayout llCurrent, @NonNull LinearLayout llCurrent0,
      @NonNull LinearLayout llCurrentTrust, @NonNull LinearLayout llDeal,
      @NonNull LinearLayout llDealTrust, @NonNull LinearLayout llHistory,
      @NonNull LinearLayout llHistoryTrust, @NonNull LinearLayout llK,
      @NonNull LinearLayout llOneCurrent, @NonNull RelativeLayout llRoot,
      @NonNull LinearLayout llTitle, @NonNull TextView mTvseven, @NonNull TextView nowFive,
      @NonNull TextView nowFour, @NonNull TextView nowOne, @NonNull TextView nowSix,
      @NonNull TextView nowThree, @NonNull TextView nowTwo,
      @NonNull SmartRefreshLayout refreshCurrent, @NonNull RecyclerView rvAmount,
      @NonNull RecyclerView rvCurrent, @NonNull RecyclerView rvHistory, @NonNull SeekBar seekbar,
      @NonNull SmartRefreshLayout smartrefreshLayout, @NonNull LinearLayout tabTime,
      @NonNull RelativeLayout textToAll, @NonNull TextView tvAmount, @NonNull TextView tvAmount2,
      @NonNull TextView tvBuy, @NonNull TextView tvBuy2, @NonNull TextView tvCompensation,
      @NonNull TextView tvCurrentTrust, @NonNull TextView tvDealTrust, @NonNull TextView tvExpect,
      @NonNull TextView tvExpect2, @NonNull TextView tvHistoryTrust, @NonNull TextView tvNowPrice,
      @NonNull TextView tvOpenPrice, @NonNull TextView tvPercent, @NonNull TextView tvSell,
      @NonNull TextView tvSell2, @NonNull TextView tvTime, @NonNull TextView tvTime2,
      @NonNull TextView tvTimeCurrent, @NonNull TextView tvTitle, @NonNull TextView tvUseMoney,
      @NonNull View viewBack, @NonNull View viewLine) {
    this.rootView = rootView;
    this.bottom = bottom;
    this.btnToLogin = btnToLogin;
    this.buFall = buFall;
    this.buInventory = buInventory;
    this.buRise = buRise;
    this.currentTrustUnderline = currentTrustUnderline;
    this.dealTrustUnderline = dealTrustUnderline;
    this.historyTrustUnderline = historyTrustUnderline;
    this.ibBack = ibBack;
    this.ibMessage = ibMessage;
    this.ibOpen = ibOpen;
    this.ibRegist = ibRegist;
    this.installments = installments;
    this.klineView = klineView;
    this.llCurrent = llCurrent;
    this.llCurrent0 = llCurrent0;
    this.llCurrentTrust = llCurrentTrust;
    this.llDeal = llDeal;
    this.llDealTrust = llDealTrust;
    this.llHistory = llHistory;
    this.llHistoryTrust = llHistoryTrust;
    this.llK = llK;
    this.llOneCurrent = llOneCurrent;
    this.llRoot = llRoot;
    this.llTitle = llTitle;
    this.mTvseven = mTvseven;
    this.nowFive = nowFive;
    this.nowFour = nowFour;
    this.nowOne = nowOne;
    this.nowSix = nowSix;
    this.nowThree = nowThree;
    this.nowTwo = nowTwo;
    this.refreshCurrent = refreshCurrent;
    this.rvAmount = rvAmount;
    this.rvCurrent = rvCurrent;
    this.rvHistory = rvHistory;
    this.seekbar = seekbar;
    this.smartrefreshLayout = smartrefreshLayout;
    this.tabTime = tabTime;
    this.textToAll = textToAll;
    this.tvAmount = tvAmount;
    this.tvAmount2 = tvAmount2;
    this.tvBuy = tvBuy;
    this.tvBuy2 = tvBuy2;
    this.tvCompensation = tvCompensation;
    this.tvCurrentTrust = tvCurrentTrust;
    this.tvDealTrust = tvDealTrust;
    this.tvExpect = tvExpect;
    this.tvExpect2 = tvExpect2;
    this.tvHistoryTrust = tvHistoryTrust;
    this.tvNowPrice = tvNowPrice;
    this.tvOpenPrice = tvOpenPrice;
    this.tvPercent = tvPercent;
    this.tvSell = tvSell;
    this.tvSell2 = tvSell2;
    this.tvTime = tvTime;
    this.tvTime2 = tvTime2;
    this.tvTimeCurrent = tvTimeCurrent;
    this.tvTitle = tvTitle;
    this.tvUseMoney = tvUseMoney;
    this.viewBack = viewBack;
    this.viewLine = viewLine;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentOptionRealBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentOptionRealBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_option_real, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentOptionRealBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    String missingId;
    missingId: {
      RelativeLayout bottom = rootView.findViewById(R.id.bottom);
      if (bottom == null) {
        missingId = "bottom";
        break missingId;
      }
      TextView btnToLogin = rootView.findViewById(R.id.btn_toLogin);
      if (btnToLogin == null) {
        missingId = "btnToLogin";
        break missingId;
      }
      Button buFall = rootView.findViewById(R.id.bu_fall);
      if (buFall == null) {
        missingId = "buFall";
        break missingId;
      }
      TextView buInventory = rootView.findViewById(R.id.bu_inventory);
      if (buInventory == null) {
        missingId = "buInventory";
        break missingId;
      }
      Button buRise = rootView.findViewById(R.id.bu_rise);
      if (buRise == null) {
        missingId = "buRise";
        break missingId;
      }
      View currentTrustUnderline = rootView.findViewById(R.id.current_trust_underline);
      if (currentTrustUnderline == null) {
        missingId = "currentTrustUnderline";
        break missingId;
      }
      View dealTrustUnderline = rootView.findViewById(R.id.deal_trust_underline);
      if (dealTrustUnderline == null) {
        missingId = "dealTrustUnderline";
        break missingId;
      }
      View historyTrustUnderline = rootView.findViewById(R.id.history_trust_underline);
      if (historyTrustUnderline == null) {
        missingId = "historyTrustUnderline";
        break missingId;
      }
      ImageButton ibBack = rootView.findViewById(R.id.ibBack);
      if (ibBack == null) {
        missingId = "ibBack";
        break missingId;
      }
      ImageView ibMessage = rootView.findViewById(R.id.ibMessage);
      if (ibMessage == null) {
        missingId = "ibMessage";
        break missingId;
      }
      ImageButton ibOpen = rootView.findViewById(R.id.ibOpen);
      if (ibOpen == null) {
        missingId = "ibOpen";
        break missingId;
      }
      TextView ibRegist = rootView.findViewById(R.id.ibRegist);
      if (ibRegist == null) {
        missingId = "ibRegist";
        break missingId;
      }
      TextView installments = rootView.findViewById(R.id.installments);
      if (installments == null) {
        missingId = "installments";
        break missingId;
      }
      KLineView klineView = rootView.findViewById(R.id.kline_view);
      if (klineView == null) {
        missingId = "klineView";
        break missingId;
      }
      LinearLayout llCurrent = rootView.findViewById(R.id.ll_current);
      if (llCurrent == null) {
        missingId = "llCurrent";
        break missingId;
      }
      LinearLayout llCurrent0 = rootView.findViewById(R.id.ll_current0);
      if (llCurrent0 == null) {
        missingId = "llCurrent0";
        break missingId;
      }
      LinearLayout llCurrentTrust = rootView.findViewById(R.id.ll_current_trust);
      if (llCurrentTrust == null) {
        missingId = "llCurrentTrust";
        break missingId;
      }
      LinearLayout llDeal = rootView.findViewById(R.id.ll_deal);
      if (llDeal == null) {
        missingId = "llDeal";
        break missingId;
      }
      LinearLayout llDealTrust = rootView.findViewById(R.id.ll_deal_trust);
      if (llDealTrust == null) {
        missingId = "llDealTrust";
        break missingId;
      }
      LinearLayout llHistory = rootView.findViewById(R.id.ll_history);
      if (llHistory == null) {
        missingId = "llHistory";
        break missingId;
      }
      LinearLayout llHistoryTrust = rootView.findViewById(R.id.ll_history_trust);
      if (llHistoryTrust == null) {
        missingId = "llHistoryTrust";
        break missingId;
      }
      LinearLayout llK = rootView.findViewById(R.id.ll_k);
      if (llK == null) {
        missingId = "llK";
        break missingId;
      }
      LinearLayout llOneCurrent = rootView.findViewById(R.id.ll_one_current);
      if (llOneCurrent == null) {
        missingId = "llOneCurrent";
        break missingId;
      }
      RelativeLayout llRoot = rootView.findViewById(R.id.llRoot);
      if (llRoot == null) {
        missingId = "llRoot";
        break missingId;
      }
      LinearLayout llTitle = rootView.findViewById(R.id.llTitle);
      if (llTitle == null) {
        missingId = "llTitle";
        break missingId;
      }
      TextView mTvseven = rootView.findViewById(R.id.mTvseven);
      if (mTvseven == null) {
        missingId = "mTvseven";
        break missingId;
      }
      TextView nowFive = rootView.findViewById(R.id.now_five);
      if (nowFive == null) {
        missingId = "nowFive";
        break missingId;
      }
      TextView nowFour = rootView.findViewById(R.id.now_four);
      if (nowFour == null) {
        missingId = "nowFour";
        break missingId;
      }
      TextView nowOne = rootView.findViewById(R.id.now_one);
      if (nowOne == null) {
        missingId = "nowOne";
        break missingId;
      }
      TextView nowSix = rootView.findViewById(R.id.now_six);
      if (nowSix == null) {
        missingId = "nowSix";
        break missingId;
      }
      TextView nowThree = rootView.findViewById(R.id.now_three);
      if (nowThree == null) {
        missingId = "nowThree";
        break missingId;
      }
      TextView nowTwo = rootView.findViewById(R.id.now_two);
      if (nowTwo == null) {
        missingId = "nowTwo";
        break missingId;
      }
      SmartRefreshLayout refreshCurrent = rootView.findViewById(R.id.refreshCurrent);
      if (refreshCurrent == null) {
        missingId = "refreshCurrent";
        break missingId;
      }
      RecyclerView rvAmount = rootView.findViewById(R.id.rv_amount);
      if (rvAmount == null) {
        missingId = "rvAmount";
        break missingId;
      }
      RecyclerView rvCurrent = rootView.findViewById(R.id.rv_current);
      if (rvCurrent == null) {
        missingId = "rvCurrent";
        break missingId;
      }
      RecyclerView rvHistory = rootView.findViewById(R.id.rv_history);
      if (rvHistory == null) {
        missingId = "rvHistory";
        break missingId;
      }
      SeekBar seekbar = rootView.findViewById(R.id.seekbar);
      if (seekbar == null) {
        missingId = "seekbar";
        break missingId;
      }
      SmartRefreshLayout smartrefreshLayout = rootView.findViewById(R.id.smartrefreshLayout);
      if (smartrefreshLayout == null) {
        missingId = "smartrefreshLayout";
        break missingId;
      }
      LinearLayout tabTime = rootView.findViewById(R.id.tab_time);
      if (tabTime == null) {
        missingId = "tabTime";
        break missingId;
      }
      RelativeLayout textToAll = rootView.findViewById(R.id.text_to_all);
      if (textToAll == null) {
        missingId = "textToAll";
        break missingId;
      }
      TextView tvAmount = rootView.findViewById(R.id.tv_amount);
      if (tvAmount == null) {
        missingId = "tvAmount";
        break missingId;
      }
      TextView tvAmount2 = rootView.findViewById(R.id.tv_amount2);
      if (tvAmount2 == null) {
        missingId = "tvAmount2";
        break missingId;
      }
      TextView tvBuy = rootView.findViewById(R.id.tv_buy);
      if (tvBuy == null) {
        missingId = "tvBuy";
        break missingId;
      }
      TextView tvBuy2 = rootView.findViewById(R.id.tv_buy2);
      if (tvBuy2 == null) {
        missingId = "tvBuy2";
        break missingId;
      }
      TextView tvCompensation = rootView.findViewById(R.id.tv_compensation);
      if (tvCompensation == null) {
        missingId = "tvCompensation";
        break missingId;
      }
      TextView tvCurrentTrust = rootView.findViewById(R.id.tv_current_trust);
      if (tvCurrentTrust == null) {
        missingId = "tvCurrentTrust";
        break missingId;
      }
      TextView tvDealTrust = rootView.findViewById(R.id.tv_deal_trust);
      if (tvDealTrust == null) {
        missingId = "tvDealTrust";
        break missingId;
      }
      TextView tvExpect = rootView.findViewById(R.id.tv_expect);
      if (tvExpect == null) {
        missingId = "tvExpect";
        break missingId;
      }
      TextView tvExpect2 = rootView.findViewById(R.id.tv_expect2);
      if (tvExpect2 == null) {
        missingId = "tvExpect2";
        break missingId;
      }
      TextView tvHistoryTrust = rootView.findViewById(R.id.tv_history_trust);
      if (tvHistoryTrust == null) {
        missingId = "tvHistoryTrust";
        break missingId;
      }
      TextView tvNowPrice = rootView.findViewById(R.id.tv_now_price);
      if (tvNowPrice == null) {
        missingId = "tvNowPrice";
        break missingId;
      }
      TextView tvOpenPrice = rootView.findViewById(R.id.tv_open_price);
      if (tvOpenPrice == null) {
        missingId = "tvOpenPrice";
        break missingId;
      }
      TextView tvPercent = rootView.findViewById(R.id.tv_percent);
      if (tvPercent == null) {
        missingId = "tvPercent";
        break missingId;
      }
      TextView tvSell = rootView.findViewById(R.id.tv_sell);
      if (tvSell == null) {
        missingId = "tvSell";
        break missingId;
      }
      TextView tvSell2 = rootView.findViewById(R.id.tv_sell2);
      if (tvSell2 == null) {
        missingId = "tvSell2";
        break missingId;
      }
      TextView tvTime = rootView.findViewById(R.id.tv_time);
      if (tvTime == null) {
        missingId = "tvTime";
        break missingId;
      }
      TextView tvTime2 = rootView.findViewById(R.id.tv_time2);
      if (tvTime2 == null) {
        missingId = "tvTime2";
        break missingId;
      }
      TextView tvTimeCurrent = rootView.findViewById(R.id.tv_time_current);
      if (tvTimeCurrent == null) {
        missingId = "tvTimeCurrent";
        break missingId;
      }
      TextView tvTitle = rootView.findViewById(R.id.tvTitle);
      if (tvTitle == null) {
        missingId = "tvTitle";
        break missingId;
      }
      TextView tvUseMoney = rootView.findViewById(R.id.tv_use_money);
      if (tvUseMoney == null) {
        missingId = "tvUseMoney";
        break missingId;
      }
      View viewBack = rootView.findViewById(R.id.view_back);
      if (viewBack == null) {
        missingId = "viewBack";
        break missingId;
      }
      View viewLine = rootView.findViewById(R.id.view_line);
      if (viewLine == null) {
        missingId = "viewLine";
        break missingId;
      }
      return new FragmentOptionRealBinding((RelativeLayout) rootView, bottom, btnToLogin, buFall,
          buInventory, buRise, currentTrustUnderline, dealTrustUnderline, historyTrustUnderline,
          ibBack, ibMessage, ibOpen, ibRegist, installments, klineView, llCurrent, llCurrent0,
          llCurrentTrust, llDeal, llDealTrust, llHistory, llHistoryTrust, llK, llOneCurrent, llRoot,
          llTitle, mTvseven, nowFive, nowFour, nowOne, nowSix, nowThree, nowTwo, refreshCurrent,
          rvAmount, rvCurrent, rvHistory, seekbar, smartrefreshLayout, tabTime, textToAll, tvAmount,
          tvAmount2, tvBuy, tvBuy2, tvCompensation, tvCurrentTrust, tvDealTrust, tvExpect,
          tvExpect2, tvHistoryTrust, tvNowPrice, tvOpenPrice, tvPercent, tvSell, tvSell2, tvTime,
          tvTime2, tvTimeCurrent, tvTitle, tvUseMoney, viewBack, viewLine);
    }
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
