// Generated by view binder compiler. Do not edit!
package com.bishang366.databinding;

import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import android.support.v7.widget.CardView;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.viewbinding.ViewBinding;
import android.widget.LinearLayout;
import android.widget.TextView;
import com.bishang366.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutMylockedItemBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final LinearLayout contentlayout;

  @NonNull
  public final TextView currentReleaseamount;

  @NonNull
  public final LinearLayout layout1;

  @NonNull
  public final LinearLayout layout2;

  @NonNull
  public final LinearLayout layout3;

  @NonNull
  public final TextView lockedDays;

  @NonNull
  public final TextView miningDaysProfit;

  @NonNull
  public final TextView releaseUnit;

  @NonNull
  public final TextView releasedDays;

  @NonNull
  public final TextView totalLocked;

  @NonNull
  public final TextView tvName;

  @NonNull
  public final TextView tvStatus;

  private LayoutMylockedItemBinding(@NonNull CardView rootView, @NonNull LinearLayout contentlayout,
      @NonNull TextView currentReleaseamount, @NonNull LinearLayout layout1,
      @NonNull LinearLayout layout2, @NonNull LinearLayout layout3, @NonNull TextView lockedDays,
      @NonNull TextView miningDaysProfit, @NonNull TextView releaseUnit,
      @NonNull TextView releasedDays, @NonNull TextView totalLocked, @NonNull TextView tvName,
      @NonNull TextView tvStatus) {
    this.rootView = rootView;
    this.contentlayout = contentlayout;
    this.currentReleaseamount = currentReleaseamount;
    this.layout1 = layout1;
    this.layout2 = layout2;
    this.layout3 = layout3;
    this.lockedDays = lockedDays;
    this.miningDaysProfit = miningDaysProfit;
    this.releaseUnit = releaseUnit;
    this.releasedDays = releasedDays;
    this.totalLocked = totalLocked;
    this.tvName = tvName;
    this.tvStatus = tvStatus;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutMylockedItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutMylockedItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_mylocked_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutMylockedItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    String missingId;
    missingId: {
      LinearLayout contentlayout = rootView.findViewById(R.id.contentlayout);
      if (contentlayout == null) {
        missingId = "contentlayout";
        break missingId;
      }
      TextView currentReleaseamount = rootView.findViewById(R.id.currentReleaseamount);
      if (currentReleaseamount == null) {
        missingId = "currentReleaseamount";
        break missingId;
      }
      LinearLayout layout1 = rootView.findViewById(R.id.layout1);
      if (layout1 == null) {
        missingId = "layout1";
        break missingId;
      }
      LinearLayout layout2 = rootView.findViewById(R.id.layout2);
      if (layout2 == null) {
        missingId = "layout2";
        break missingId;
      }
      LinearLayout layout3 = rootView.findViewById(R.id.layout3);
      if (layout3 == null) {
        missingId = "layout3";
        break missingId;
      }
      TextView lockedDays = rootView.findViewById(R.id.lockedDays);
      if (lockedDays == null) {
        missingId = "lockedDays";
        break missingId;
      }
      TextView miningDaysProfit = rootView.findViewById(R.id.miningDaysProfit);
      if (miningDaysProfit == null) {
        missingId = "miningDaysProfit";
        break missingId;
      }
      TextView releaseUnit = rootView.findViewById(R.id.releaseUnit);
      if (releaseUnit == null) {
        missingId = "releaseUnit";
        break missingId;
      }
      TextView releasedDays = rootView.findViewById(R.id.releasedDays);
      if (releasedDays == null) {
        missingId = "releasedDays";
        break missingId;
      }
      TextView totalLocked = rootView.findViewById(R.id.totalLocked);
      if (totalLocked == null) {
        missingId = "totalLocked";
        break missingId;
      }
      TextView tvName = rootView.findViewById(R.id.tvName);
      if (tvName == null) {
        missingId = "tvName";
        break missingId;
      }
      TextView tvStatus = rootView.findViewById(R.id.tvStatus);
      if (tvStatus == null) {
        missingId = "tvStatus";
        break missingId;
      }
      return new LayoutMylockedItemBinding((CardView) rootView, contentlayout, currentReleaseamount,
          layout1, layout2, layout3, lockedDays, miningDaysProfit, releaseUnit, releasedDays,
          totalLocked, tvName, tvStatus);
    }
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
