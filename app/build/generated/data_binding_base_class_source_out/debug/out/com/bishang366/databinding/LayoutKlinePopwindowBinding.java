// Generated by view binder compiler. Do not edit!
package com.bishang366.databinding;

import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.viewbinding.ViewBinding;
import android.widget.LinearLayout;
import android.widget.TextView;
import com.bishang366.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutKlinePopwindowBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout llIndex;

  @NonNull
  public final LinearLayout tabPop;

  @NonNull
  public final TextView tvBOLL;

  @NonNull
  public final TextView tvChildHide;

  @NonNull
  public final TextView tvKDJ;

  @NonNull
  public final TextView tvMA;

  @NonNull
  public final TextView tvMACD;

  @NonNull
  public final TextView tvMainHide;

  @NonNull
  public final TextView tvRSI;

  private LayoutKlinePopwindowBinding(@NonNull LinearLayout rootView, @NonNull LinearLayout llIndex,
      @NonNull LinearLayout tabPop, @NonNull TextView tvBOLL, @NonNull TextView tvChildHide,
      @NonNull TextView tvKDJ, @NonNull TextView tvMA, @NonNull TextView tvMACD,
      @NonNull TextView tvMainHide, @NonNull TextView tvRSI) {
    this.rootView = rootView;
    this.llIndex = llIndex;
    this.tabPop = tabPop;
    this.tvBOLL = tvBOLL;
    this.tvChildHide = tvChildHide;
    this.tvKDJ = tvKDJ;
    this.tvMA = tvMA;
    this.tvMACD = tvMACD;
    this.tvMainHide = tvMainHide;
    this.tvRSI = tvRSI;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutKlinePopwindowBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutKlinePopwindowBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_kline_popwindow, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutKlinePopwindowBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    String missingId;
    missingId: {
      LinearLayout llIndex = rootView.findViewById(R.id.llIndex);
      if (llIndex == null) {
        missingId = "llIndex";
        break missingId;
      }
      LinearLayout tabPop = rootView.findViewById(R.id.tabPop);
      if (tabPop == null) {
        missingId = "tabPop";
        break missingId;
      }
      TextView tvBOLL = rootView.findViewById(R.id.tvBOLL);
      if (tvBOLL == null) {
        missingId = "tvBOLL";
        break missingId;
      }
      TextView tvChildHide = rootView.findViewById(R.id.tvChildHide);
      if (tvChildHide == null) {
        missingId = "tvChildHide";
        break missingId;
      }
      TextView tvKDJ = rootView.findViewById(R.id.tvKDJ);
      if (tvKDJ == null) {
        missingId = "tvKDJ";
        break missingId;
      }
      TextView tvMA = rootView.findViewById(R.id.tvMA);
      if (tvMA == null) {
        missingId = "tvMA";
        break missingId;
      }
      TextView tvMACD = rootView.findViewById(R.id.tvMACD);
      if (tvMACD == null) {
        missingId = "tvMACD";
        break missingId;
      }
      TextView tvMainHide = rootView.findViewById(R.id.tvMainHide);
      if (tvMainHide == null) {
        missingId = "tvMainHide";
        break missingId;
      }
      TextView tvRSI = rootView.findViewById(R.id.tvRSI);
      if (tvRSI == null) {
        missingId = "tvRSI";
        break missingId;
      }
      return new LayoutKlinePopwindowBinding((LinearLayout) rootView, llIndex, tabPop, tvBOLL,
          tvChildHide, tvKDJ, tvMA, tvMACD, tvMainHide, tvRSI);
    }
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
