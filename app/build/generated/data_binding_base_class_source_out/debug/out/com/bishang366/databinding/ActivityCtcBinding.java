// Generated by view binder compiler. Do not edit!
package com.bishang366.databinding;

import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import android.support.v4.widget.SwipeRefreshLayout;
import android.support.v7.widget.RecyclerView;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.viewbinding.ViewBinding;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.TextView;
import com.bishang366.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityCtcBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnBuy;

  @NonNull
  public final Button btnSell;

  @NonNull
  public final EditText buyAmount;

  @NonNull
  public final TextView buyPrice;

  @NonNull
  public final View buyTabUnderline;

  @NonNull
  public final ImageButton ibBack;

  @NonNull
  public final LinearLayout llBuy;

  @NonNull
  public final LinearLayout llPayTypeBuy;

  @NonNull
  public final LinearLayout llPayTypeSell;

  @NonNull
  public final LinearLayout llSell;

  @NonNull
  public final LinearLayout llTitle;

  @NonNull
  public final SwipeRefreshLayout refreshLayout;

  @NonNull
  public final RecyclerView rvDetail;

  @NonNull
  public final EditText sellAmount;

  @NonNull
  public final TextView sellPrice;

  @NonNull
  public final View sellTabUnderline;

  @NonNull
  public final LinearLayout tabBuy;

  @NonNull
  public final LinearLayout tabSell;

  @NonNull
  public final LinearLayout textToAll;

  @NonNull
  public final TextView tvBuyTab;

  @NonNull
  public final TextView tvBuyTotal;

  @NonNull
  public final TextView tvPayTypeBuy;

  @NonNull
  public final TextView tvPayTypeSell;

  @NonNull
  public final TextView tvSellTab;

  @NonNull
  public final TextView tvSellTotal;

  @NonNull
  public final TextView tvTradeKnow;

  @NonNull
  public final View viewBack;

  private ActivityCtcBinding(@NonNull LinearLayout rootView, @NonNull Button btnBuy,
      @NonNull Button btnSell, @NonNull EditText buyAmount, @NonNull TextView buyPrice,
      @NonNull View buyTabUnderline, @NonNull ImageButton ibBack, @NonNull LinearLayout llBuy,
      @NonNull LinearLayout llPayTypeBuy, @NonNull LinearLayout llPayTypeSell,
      @NonNull LinearLayout llSell, @NonNull LinearLayout llTitle,
      @NonNull SwipeRefreshLayout refreshLayout, @NonNull RecyclerView rvDetail,
      @NonNull EditText sellAmount, @NonNull TextView sellPrice, @NonNull View sellTabUnderline,
      @NonNull LinearLayout tabBuy, @NonNull LinearLayout tabSell, @NonNull LinearLayout textToAll,
      @NonNull TextView tvBuyTab, @NonNull TextView tvBuyTotal, @NonNull TextView tvPayTypeBuy,
      @NonNull TextView tvPayTypeSell, @NonNull TextView tvSellTab, @NonNull TextView tvSellTotal,
      @NonNull TextView tvTradeKnow, @NonNull View viewBack) {
    this.rootView = rootView;
    this.btnBuy = btnBuy;
    this.btnSell = btnSell;
    this.buyAmount = buyAmount;
    this.buyPrice = buyPrice;
    this.buyTabUnderline = buyTabUnderline;
    this.ibBack = ibBack;
    this.llBuy = llBuy;
    this.llPayTypeBuy = llPayTypeBuy;
    this.llPayTypeSell = llPayTypeSell;
    this.llSell = llSell;
    this.llTitle = llTitle;
    this.refreshLayout = refreshLayout;
    this.rvDetail = rvDetail;
    this.sellAmount = sellAmount;
    this.sellPrice = sellPrice;
    this.sellTabUnderline = sellTabUnderline;
    this.tabBuy = tabBuy;
    this.tabSell = tabSell;
    this.textToAll = textToAll;
    this.tvBuyTab = tvBuyTab;
    this.tvBuyTotal = tvBuyTotal;
    this.tvPayTypeBuy = tvPayTypeBuy;
    this.tvPayTypeSell = tvPayTypeSell;
    this.tvSellTab = tvSellTab;
    this.tvSellTotal = tvSellTotal;
    this.tvTradeKnow = tvTradeKnow;
    this.viewBack = viewBack;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityCtcBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityCtcBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_ctc, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityCtcBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    String missingId;
    missingId: {
      Button btnBuy = rootView.findViewById(R.id.btnBuy);
      if (btnBuy == null) {
        missingId = "btnBuy";
        break missingId;
      }
      Button btnSell = rootView.findViewById(R.id.btnSell);
      if (btnSell == null) {
        missingId = "btnSell";
        break missingId;
      }
      EditText buyAmount = rootView.findViewById(R.id.buyAmount);
      if (buyAmount == null) {
        missingId = "buyAmount";
        break missingId;
      }
      TextView buyPrice = rootView.findViewById(R.id.buyPrice);
      if (buyPrice == null) {
        missingId = "buyPrice";
        break missingId;
      }
      View buyTabUnderline = rootView.findViewById(R.id.buy_tab_underline);
      if (buyTabUnderline == null) {
        missingId = "buyTabUnderline";
        break missingId;
      }
      ImageButton ibBack = rootView.findViewById(R.id.ibBack);
      if (ibBack == null) {
        missingId = "ibBack";
        break missingId;
      }
      LinearLayout llBuy = rootView.findViewById(R.id.llBuy);
      if (llBuy == null) {
        missingId = "llBuy";
        break missingId;
      }
      LinearLayout llPayTypeBuy = rootView.findViewById(R.id.llPayTypeBuy);
      if (llPayTypeBuy == null) {
        missingId = "llPayTypeBuy";
        break missingId;
      }
      LinearLayout llPayTypeSell = rootView.findViewById(R.id.llPayTypeSell);
      if (llPayTypeSell == null) {
        missingId = "llPayTypeSell";
        break missingId;
      }
      LinearLayout llSell = rootView.findViewById(R.id.llSell);
      if (llSell == null) {
        missingId = "llSell";
        break missingId;
      }
      LinearLayout llTitle = rootView.findViewById(R.id.llTitle);
      if (llTitle == null) {
        missingId = "llTitle";
        break missingId;
      }
      SwipeRefreshLayout refreshLayout = rootView.findViewById(R.id.refreshLayout);
      if (refreshLayout == null) {
        missingId = "refreshLayout";
        break missingId;
      }
      RecyclerView rvDetail = rootView.findViewById(R.id.rvDetail);
      if (rvDetail == null) {
        missingId = "rvDetail";
        break missingId;
      }
      EditText sellAmount = rootView.findViewById(R.id.sellAmount);
      if (sellAmount == null) {
        missingId = "sellAmount";
        break missingId;
      }
      TextView sellPrice = rootView.findViewById(R.id.sellPrice);
      if (sellPrice == null) {
        missingId = "sellPrice";
        break missingId;
      }
      View sellTabUnderline = rootView.findViewById(R.id.sell_tab_underline);
      if (sellTabUnderline == null) {
        missingId = "sellTabUnderline";
        break missingId;
      }
      LinearLayout tabBuy = rootView.findViewById(R.id.tabBuy);
      if (tabBuy == null) {
        missingId = "tabBuy";
        break missingId;
      }
      LinearLayout tabSell = rootView.findViewById(R.id.tabSell);
      if (tabSell == null) {
        missingId = "tabSell";
        break missingId;
      }
      LinearLayout textToAll = rootView.findViewById(R.id.text_to_all);
      if (textToAll == null) {
        missingId = "textToAll";
        break missingId;
      }
      TextView tvBuyTab = rootView.findViewById(R.id.tv_buy_tab);
      if (tvBuyTab == null) {
        missingId = "tvBuyTab";
        break missingId;
      }
      TextView tvBuyTotal = rootView.findViewById(R.id.tvBuyTotal);
      if (tvBuyTotal == null) {
        missingId = "tvBuyTotal";
        break missingId;
      }
      TextView tvPayTypeBuy = rootView.findViewById(R.id.tvPayTypeBuy);
      if (tvPayTypeBuy == null) {
        missingId = "tvPayTypeBuy";
        break missingId;
      }
      TextView tvPayTypeSell = rootView.findViewById(R.id.tvPayTypeSell);
      if (tvPayTypeSell == null) {
        missingId = "tvPayTypeSell";
        break missingId;
      }
      TextView tvSellTab = rootView.findViewById(R.id.tv_sell_tab);
      if (tvSellTab == null) {
        missingId = "tvSellTab";
        break missingId;
      }
      TextView tvSellTotal = rootView.findViewById(R.id.tvSellTotal);
      if (tvSellTotal == null) {
        missingId = "tvSellTotal";
        break missingId;
      }
      TextView tvTradeKnow = rootView.findViewById(R.id.tvTradeKnow);
      if (tvTradeKnow == null) {
        missingId = "tvTradeKnow";
        break missingId;
      }
      View viewBack = rootView.findViewById(R.id.view_back);
      if (viewBack == null) {
        missingId = "viewBack";
        break missingId;
      }
      return new ActivityCtcBinding((LinearLayout) rootView, btnBuy, btnSell, buyAmount, buyPrice,
          buyTabUnderline, ibBack, llBuy, llPayTypeBuy, llPayTypeSell, llSell, llTitle,
          refreshLayout, rvDetail, sellAmount, sellPrice, sellTabUnderline, tabBuy, tabSell,
          textToAll, tvBuyTab, tvBuyTotal, tvPayTypeBuy, tvPayTypeSell, tvSellTab, tvSellTotal,
          tvTradeKnow, viewBack);
    }
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
