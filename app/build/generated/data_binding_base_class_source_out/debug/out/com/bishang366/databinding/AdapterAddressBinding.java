// Generated by view binder compiler. Do not edit!
package com.bishang366.databinding;

import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.viewbinding.ViewBinding;
import android.widget.LinearLayout;
import android.widget.TextView;
import com.bishang366.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AdapterAddressBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView tvAddress;

  @NonNull
  public final TextView tvRemark;

  private AdapterAddressBinding(@NonNull LinearLayout rootView, @NonNull TextView tvAddress,
      @NonNull TextView tvRemark) {
    this.rootView = rootView;
    this.tvAddress = tvAddress;
    this.tvRemark = tvRemark;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AdapterAddressBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AdapterAddressBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.adapter_address, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AdapterAddressBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    String missingId;
    missingId: {
      TextView tvAddress = rootView.findViewById(R.id.tvAddress);
      if (tvAddress == null) {
        missingId = "tvAddress";
        break missingId;
      }
      TextView tvRemark = rootView.findViewById(R.id.tvRemark);
      if (tvRemark == null) {
        missingId = "tvRemark";
        break missingId;
      }
      return new AdapterAddressBinding((LinearLayout) rootView, tvAddress, tvRemark);
    }
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
