// Generated by view binder compiler. Do not edit!
package com.bishang366.databinding;

import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.viewbinding.ViewBinding;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import com.bishang366.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AdapterEntrustChildBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView ivChildGo;

  @NonNull
  public final TextView tvChildAmount;

  @NonNull
  public final TextView tvChildAverage;

  @NonNull
  public final TextView tvChildAverageText;

  @NonNull
  public final TextView tvChildBase;

  @NonNull
  public final TextView tvChildCoin;

  @NonNull
  public final TextView tvChildPrice;

  @NonNull
  public final TextView tvChildState;

  @NonNull
  public final TextView tvChildTime;

  @NonNull
  public final TextView tvChildTradeAmount;

  @NonNull
  public final TextView tvChildTradedAmountText;

  @NonNull
  public final TextView tvChildTurnover;

  @NonNull
  public final TextView tvChildTurnoverText;

  @NonNull
  public final TextView tvChildType;

  private AdapterEntrustChildBinding(@NonNull LinearLayout rootView, @NonNull ImageView ivChildGo,
      @NonNull TextView tvChildAmount, @NonNull TextView tvChildAverage,
      @NonNull TextView tvChildAverageText, @NonNull TextView tvChildBase,
      @NonNull TextView tvChildCoin, @NonNull TextView tvChildPrice, @NonNull TextView tvChildState,
      @NonNull TextView tvChildTime, @NonNull TextView tvChildTradeAmount,
      @NonNull TextView tvChildTradedAmountText, @NonNull TextView tvChildTurnover,
      @NonNull TextView tvChildTurnoverText, @NonNull TextView tvChildType) {
    this.rootView = rootView;
    this.ivChildGo = ivChildGo;
    this.tvChildAmount = tvChildAmount;
    this.tvChildAverage = tvChildAverage;
    this.tvChildAverageText = tvChildAverageText;
    this.tvChildBase = tvChildBase;
    this.tvChildCoin = tvChildCoin;
    this.tvChildPrice = tvChildPrice;
    this.tvChildState = tvChildState;
    this.tvChildTime = tvChildTime;
    this.tvChildTradeAmount = tvChildTradeAmount;
    this.tvChildTradedAmountText = tvChildTradedAmountText;
    this.tvChildTurnover = tvChildTurnover;
    this.tvChildTurnoverText = tvChildTurnoverText;
    this.tvChildType = tvChildType;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AdapterEntrustChildBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AdapterEntrustChildBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.adapter_entrust_child, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AdapterEntrustChildBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    String missingId;
    missingId: {
      ImageView ivChildGo = rootView.findViewById(R.id.ivChildGo);
      if (ivChildGo == null) {
        missingId = "ivChildGo";
        break missingId;
      }
      TextView tvChildAmount = rootView.findViewById(R.id.tvChildAmount);
      if (tvChildAmount == null) {
        missingId = "tvChildAmount";
        break missingId;
      }
      TextView tvChildAverage = rootView.findViewById(R.id.tvChildAverage);
      if (tvChildAverage == null) {
        missingId = "tvChildAverage";
        break missingId;
      }
      TextView tvChildAverageText = rootView.findViewById(R.id.tvChildAverageText);
      if (tvChildAverageText == null) {
        missingId = "tvChildAverageText";
        break missingId;
      }
      TextView tvChildBase = rootView.findViewById(R.id.tvChildBase);
      if (tvChildBase == null) {
        missingId = "tvChildBase";
        break missingId;
      }
      TextView tvChildCoin = rootView.findViewById(R.id.tvChildCoin);
      if (tvChildCoin == null) {
        missingId = "tvChildCoin";
        break missingId;
      }
      TextView tvChildPrice = rootView.findViewById(R.id.tvChildPrice);
      if (tvChildPrice == null) {
        missingId = "tvChildPrice";
        break missingId;
      }
      TextView tvChildState = rootView.findViewById(R.id.tvChildState);
      if (tvChildState == null) {
        missingId = "tvChildState";
        break missingId;
      }
      TextView tvChildTime = rootView.findViewById(R.id.tvChildTime);
      if (tvChildTime == null) {
        missingId = "tvChildTime";
        break missingId;
      }
      TextView tvChildTradeAmount = rootView.findViewById(R.id.tvChildTradeAmount);
      if (tvChildTradeAmount == null) {
        missingId = "tvChildTradeAmount";
        break missingId;
      }
      TextView tvChildTradedAmountText = rootView.findViewById(R.id.tvChildTradedAmountText);
      if (tvChildTradedAmountText == null) {
        missingId = "tvChildTradedAmountText";
        break missingId;
      }
      TextView tvChildTurnover = rootView.findViewById(R.id.tvChildTurnover);
      if (tvChildTurnover == null) {
        missingId = "tvChildTurnover";
        break missingId;
      }
      TextView tvChildTurnoverText = rootView.findViewById(R.id.tvChildTurnoverText);
      if (tvChildTurnoverText == null) {
        missingId = "tvChildTurnoverText";
        break missingId;
      }
      TextView tvChildType = rootView.findViewById(R.id.tvChildType);
      if (tvChildType == null) {
        missingId = "tvChildType";
        break missingId;
      }
      return new AdapterEntrustChildBinding((LinearLayout) rootView, ivChildGo, tvChildAmount,
          tvChildAverage, tvChildAverageText, tvChildBase, tvChildCoin, tvChildPrice, tvChildState,
          tvChildTime, tvChildTradeAmount, tvChildTradedAmountText, tvChildTurnover,
          tvChildTurnoverText, tvChildType);
    }
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
