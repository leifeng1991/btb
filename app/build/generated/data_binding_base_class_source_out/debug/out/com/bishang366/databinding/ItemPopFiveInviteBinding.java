// Generated by view binder compiler. Do not edit!
package com.bishang366.databinding;

import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.viewbinding.ViewBinding;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import com.bishang366.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemPopFiveInviteBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView img;

  @NonNull
  public final ImageView ivCodeAddress;

  @NonNull
  public final LinearLayout llRoot;

  @NonNull
  public final RelativeLayout rlImg;

  @NonNull
  public final TextView tvView;

  private ItemPopFiveInviteBinding(@NonNull LinearLayout rootView, @NonNull ImageView img,
      @NonNull ImageView ivCodeAddress, @NonNull LinearLayout llRoot, @NonNull RelativeLayout rlImg,
      @NonNull TextView tvView) {
    this.rootView = rootView;
    this.img = img;
    this.ivCodeAddress = ivCodeAddress;
    this.llRoot = llRoot;
    this.rlImg = rlImg;
    this.tvView = tvView;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemPopFiveInviteBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemPopFiveInviteBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_pop_five_invite, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemPopFiveInviteBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    String missingId;
    missingId: {
      ImageView img = rootView.findViewById(R.id.img);
      if (img == null) {
        missingId = "img";
        break missingId;
      }
      ImageView ivCodeAddress = rootView.findViewById(R.id.iv_code_address);
      if (ivCodeAddress == null) {
        missingId = "ivCodeAddress";
        break missingId;
      }
      LinearLayout llRoot = rootView.findViewById(R.id.llRoot);
      if (llRoot == null) {
        missingId = "llRoot";
        break missingId;
      }
      RelativeLayout rlImg = rootView.findViewById(R.id.rl_img);
      if (rlImg == null) {
        missingId = "rlImg";
        break missingId;
      }
      TextView tvView = rootView.findViewById(R.id.tv_view);
      if (tvView == null) {
        missingId = "tvView";
        break missingId;
      }
      return new ItemPopFiveInviteBinding((LinearLayout) rootView, img, ivCodeAddress, llRoot,
          rlImg, tvView);
    }
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
