// Generated by view binder compiler. Do not edit!
package com.bishang366.databinding;

import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import android.support.v7.widget.RecyclerView;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.viewbinding.ViewBinding;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import com.bishang366.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityWalletBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final CheckBox cbHide;

  @NonNull
  public final View coinsUnderline;

  @NonNull
  public final View constractUnderline;

  @NonNull
  public final EditText evSearch;

  @NonNull
  public final ImageButton ibBack;

  @NonNull
  public final TextView ibDetail;

  @NonNull
  public final ImageView ivSearch;

  @NonNull
  public final ImageView ivSee;

  @NonNull
  public final LinearLayout llAccount;

  @NonNull
  public final LinearLayout llCoins;

  @NonNull
  public final LinearLayout llCoinsTab;

  @NonNull
  public final LinearLayout llConstract;

  @NonNull
  public final LinearLayout llConstractTab;

  @NonNull
  public final LinearLayout llContainer;

  @NonNull
  public final LinearLayout llMid;

  @NonNull
  public final LinearLayout llOption;

  @NonNull
  public final LinearLayout llOptionTab;

  @NonNull
  public final LinearLayout llTitle;

  @NonNull
  public final View optionUnderline;

  @NonNull
  public final RecyclerView rvWallet;

  @NonNull
  public final RecyclerView rvWalletConstract;

  @NonNull
  public final RecyclerView rvWalletOption;

  @NonNull
  public final RelativeLayout textToAll;

  @NonNull
  public final TextView tvAmount;

  @NonNull
  public final TextView tvCharge;

  @NonNull
  public final TextView tvCnyAmount;

  @NonNull
  public final TextView tvCoins;

  @NonNull
  public final TextView tvConstract;

  @NonNull
  public final TextView tvMention;

  @NonNull
  public final TextView tvOption;

  @NonNull
  public final TextView txRightBt;

  @NonNull
  public final View viewBack;

  private ActivityWalletBinding(@NonNull RelativeLayout rootView, @NonNull CheckBox cbHide,
      @NonNull View coinsUnderline, @NonNull View constractUnderline, @NonNull EditText evSearch,
      @NonNull ImageButton ibBack, @NonNull TextView ibDetail, @NonNull ImageView ivSearch,
      @NonNull ImageView ivSee, @NonNull LinearLayout llAccount, @NonNull LinearLayout llCoins,
      @NonNull LinearLayout llCoinsTab, @NonNull LinearLayout llConstract,
      @NonNull LinearLayout llConstractTab, @NonNull LinearLayout llContainer,
      @NonNull LinearLayout llMid, @NonNull LinearLayout llOption,
      @NonNull LinearLayout llOptionTab, @NonNull LinearLayout llTitle,
      @NonNull View optionUnderline, @NonNull RecyclerView rvWallet,
      @NonNull RecyclerView rvWalletConstract, @NonNull RecyclerView rvWalletOption,
      @NonNull RelativeLayout textToAll, @NonNull TextView tvAmount, @NonNull TextView tvCharge,
      @NonNull TextView tvCnyAmount, @NonNull TextView tvCoins, @NonNull TextView tvConstract,
      @NonNull TextView tvMention, @NonNull TextView tvOption, @NonNull TextView txRightBt,
      @NonNull View viewBack) {
    this.rootView = rootView;
    this.cbHide = cbHide;
    this.coinsUnderline = coinsUnderline;
    this.constractUnderline = constractUnderline;
    this.evSearch = evSearch;
    this.ibBack = ibBack;
    this.ibDetail = ibDetail;
    this.ivSearch = ivSearch;
    this.ivSee = ivSee;
    this.llAccount = llAccount;
    this.llCoins = llCoins;
    this.llCoinsTab = llCoinsTab;
    this.llConstract = llConstract;
    this.llConstractTab = llConstractTab;
    this.llContainer = llContainer;
    this.llMid = llMid;
    this.llOption = llOption;
    this.llOptionTab = llOptionTab;
    this.llTitle = llTitle;
    this.optionUnderline = optionUnderline;
    this.rvWallet = rvWallet;
    this.rvWalletConstract = rvWalletConstract;
    this.rvWalletOption = rvWalletOption;
    this.textToAll = textToAll;
    this.tvAmount = tvAmount;
    this.tvCharge = tvCharge;
    this.tvCnyAmount = tvCnyAmount;
    this.tvCoins = tvCoins;
    this.tvConstract = tvConstract;
    this.tvMention = tvMention;
    this.tvOption = tvOption;
    this.txRightBt = txRightBt;
    this.viewBack = viewBack;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityWalletBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityWalletBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_wallet, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityWalletBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    String missingId;
    missingId: {
      CheckBox cbHide = rootView.findViewById(R.id.cbHide);
      if (cbHide == null) {
        missingId = "cbHide";
        break missingId;
      }
      View coinsUnderline = rootView.findViewById(R.id.coins_underline);
      if (coinsUnderline == null) {
        missingId = "coinsUnderline";
        break missingId;
      }
      View constractUnderline = rootView.findViewById(R.id.constract_underline);
      if (constractUnderline == null) {
        missingId = "constractUnderline";
        break missingId;
      }
      EditText evSearch = rootView.findViewById(R.id.evSearch);
      if (evSearch == null) {
        missingId = "evSearch";
        break missingId;
      }
      ImageButton ibBack = rootView.findViewById(R.id.ibBack);
      if (ibBack == null) {
        missingId = "ibBack";
        break missingId;
      }
      TextView ibDetail = rootView.findViewById(R.id.ibDetail);
      if (ibDetail == null) {
        missingId = "ibDetail";
        break missingId;
      }
      ImageView ivSearch = rootView.findViewById(R.id.ivSearch);
      if (ivSearch == null) {
        missingId = "ivSearch";
        break missingId;
      }
      ImageView ivSee = rootView.findViewById(R.id.ivSee);
      if (ivSee == null) {
        missingId = "ivSee";
        break missingId;
      }
      LinearLayout llAccount = rootView.findViewById(R.id.llAccount);
      if (llAccount == null) {
        missingId = "llAccount";
        break missingId;
      }
      LinearLayout llCoins = rootView.findViewById(R.id.ll_coins);
      if (llCoins == null) {
        missingId = "llCoins";
        break missingId;
      }
      LinearLayout llCoinsTab = rootView.findViewById(R.id.ll_coins_tab);
      if (llCoinsTab == null) {
        missingId = "llCoinsTab";
        break missingId;
      }
      LinearLayout llConstract = rootView.findViewById(R.id.ll_constract);
      if (llConstract == null) {
        missingId = "llConstract";
        break missingId;
      }
      LinearLayout llConstractTab = rootView.findViewById(R.id.ll_constract_tab);
      if (llConstractTab == null) {
        missingId = "llConstractTab";
        break missingId;
      }
      LinearLayout llContainer = rootView.findViewById(R.id.llContainer);
      if (llContainer == null) {
        missingId = "llContainer";
        break missingId;
      }
      LinearLayout llMid = rootView.findViewById(R.id.ll_mid);
      if (llMid == null) {
        missingId = "llMid";
        break missingId;
      }
      LinearLayout llOption = rootView.findViewById(R.id.ll_option);
      if (llOption == null) {
        missingId = "llOption";
        break missingId;
      }
      LinearLayout llOptionTab = rootView.findViewById(R.id.ll_option_tab);
      if (llOptionTab == null) {
        missingId = "llOptionTab";
        break missingId;
      }
      LinearLayout llTitle = rootView.findViewById(R.id.llTitle);
      if (llTitle == null) {
        missingId = "llTitle";
        break missingId;
      }
      View optionUnderline = rootView.findViewById(R.id.option_underline);
      if (optionUnderline == null) {
        missingId = "optionUnderline";
        break missingId;
      }
      RecyclerView rvWallet = rootView.findViewById(R.id.rvWallet);
      if (rvWallet == null) {
        missingId = "rvWallet";
        break missingId;
      }
      RecyclerView rvWalletConstract = rootView.findViewById(R.id.rvWallet_constract);
      if (rvWalletConstract == null) {
        missingId = "rvWalletConstract";
        break missingId;
      }
      RecyclerView rvWalletOption = rootView.findViewById(R.id.rvWallet_option);
      if (rvWalletOption == null) {
        missingId = "rvWalletOption";
        break missingId;
      }
      RelativeLayout textToAll = rootView.findViewById(R.id.text_to_all);
      if (textToAll == null) {
        missingId = "textToAll";
        break missingId;
      }
      TextView tvAmount = rootView.findViewById(R.id.tvAmount);
      if (tvAmount == null) {
        missingId = "tvAmount";
        break missingId;
      }
      TextView tvCharge = rootView.findViewById(R.id.tv_charge);
      if (tvCharge == null) {
        missingId = "tvCharge";
        break missingId;
      }
      TextView tvCnyAmount = rootView.findViewById(R.id.tvCnyAmount);
      if (tvCnyAmount == null) {
        missingId = "tvCnyAmount";
        break missingId;
      }
      TextView tvCoins = rootView.findViewById(R.id.tv_coins);
      if (tvCoins == null) {
        missingId = "tvCoins";
        break missingId;
      }
      TextView tvConstract = rootView.findViewById(R.id.tv_constract);
      if (tvConstract == null) {
        missingId = "tvConstract";
        break missingId;
      }
      TextView tvMention = rootView.findViewById(R.id.tv_Mention);
      if (tvMention == null) {
        missingId = "tvMention";
        break missingId;
      }
      TextView tvOption = rootView.findViewById(R.id.tv_option);
      if (tvOption == null) {
        missingId = "tvOption";
        break missingId;
      }
      TextView txRightBt = rootView.findViewById(R.id.tx_right_bt);
      if (txRightBt == null) {
        missingId = "txRightBt";
        break missingId;
      }
      View viewBack = rootView.findViewById(R.id.view_back);
      if (viewBack == null) {
        missingId = "viewBack";
        break missingId;
      }
      return new ActivityWalletBinding((RelativeLayout) rootView, cbHide, coinsUnderline,
          constractUnderline, evSearch, ibBack, ibDetail, ivSearch, ivSee, llAccount, llCoins,
          llCoinsTab, llConstract, llConstractTab, llContainer, llMid, llOption, llOptionTab,
          llTitle, optionUnderline, rvWallet, rvWalletConstract, rvWalletOption, textToAll,
          tvAmount, tvCharge, tvCnyAmount, tvCoins, tvConstract, tvMention, tvOption, txRightBt,
          viewBack);
    }
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
