// Generated by view binder compiler. Do not edit!
package com.bishang366.databinding;

import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.viewbinding.ViewBinding;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import com.bishang366.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityExtractBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final EditText etAddress;

  @NonNull
  public final EditText etCode;

  @NonNull
  public final EditText etCount;

  @NonNull
  public final EditText etPassword;

  @NonNull
  public final EditText etServiceFee;

  @NonNull
  public final EditText etextRemark;

  @NonNull
  public final ImageButton ibBack;

  @NonNull
  public final ImageView ivInto;

  @NonNull
  public final LinearLayout layoutMemo;

  @NonNull
  public final LinearLayout llTitle;

  @NonNull
  public final TextView textRemark;

  @NonNull
  public final TextView tvAll;

  @NonNull
  public final TextView tvCanUse;

  @NonNull
  public final TextView tvExtract;

  @NonNull
  public final TextView tvFinalCount;

  @NonNull
  public final TextView tvGetCode;

  @NonNull
  public final TextView tvTitle;

  @NonNull
  public final TextView tvUnit1;

  @NonNull
  public final TextView tvUnit2;

  @NonNull
  public final TextView tvUnit3;

  @NonNull
  public final View viewBack;

  @NonNull
  public final ImageView yan;

  private ActivityExtractBinding(@NonNull LinearLayout rootView, @NonNull EditText etAddress,
      @NonNull EditText etCode, @NonNull EditText etCount, @NonNull EditText etPassword,
      @NonNull EditText etServiceFee, @NonNull EditText etextRemark, @NonNull ImageButton ibBack,
      @NonNull ImageView ivInto, @NonNull LinearLayout layoutMemo, @NonNull LinearLayout llTitle,
      @NonNull TextView textRemark, @NonNull TextView tvAll, @NonNull TextView tvCanUse,
      @NonNull TextView tvExtract, @NonNull TextView tvFinalCount, @NonNull TextView tvGetCode,
      @NonNull TextView tvTitle, @NonNull TextView tvUnit1, @NonNull TextView tvUnit2,
      @NonNull TextView tvUnit3, @NonNull View viewBack, @NonNull ImageView yan) {
    this.rootView = rootView;
    this.etAddress = etAddress;
    this.etCode = etCode;
    this.etCount = etCount;
    this.etPassword = etPassword;
    this.etServiceFee = etServiceFee;
    this.etextRemark = etextRemark;
    this.ibBack = ibBack;
    this.ivInto = ivInto;
    this.layoutMemo = layoutMemo;
    this.llTitle = llTitle;
    this.textRemark = textRemark;
    this.tvAll = tvAll;
    this.tvCanUse = tvCanUse;
    this.tvExtract = tvExtract;
    this.tvFinalCount = tvFinalCount;
    this.tvGetCode = tvGetCode;
    this.tvTitle = tvTitle;
    this.tvUnit1 = tvUnit1;
    this.tvUnit2 = tvUnit2;
    this.tvUnit3 = tvUnit3;
    this.viewBack = viewBack;
    this.yan = yan;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityExtractBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityExtractBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_extract, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityExtractBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    String missingId;
    missingId: {
      EditText etAddress = rootView.findViewById(R.id.etAddress);
      if (etAddress == null) {
        missingId = "etAddress";
        break missingId;
      }
      EditText etCode = rootView.findViewById(R.id.etCode);
      if (etCode == null) {
        missingId = "etCode";
        break missingId;
      }
      EditText etCount = rootView.findViewById(R.id.etCount);
      if (etCount == null) {
        missingId = "etCount";
        break missingId;
      }
      EditText etPassword = rootView.findViewById(R.id.etPassword);
      if (etPassword == null) {
        missingId = "etPassword";
        break missingId;
      }
      EditText etServiceFee = rootView.findViewById(R.id.etServiceFee);
      if (etServiceFee == null) {
        missingId = "etServiceFee";
        break missingId;
      }
      EditText etextRemark = rootView.findViewById(R.id.etext_remark);
      if (etextRemark == null) {
        missingId = "etextRemark";
        break missingId;
      }
      ImageButton ibBack = rootView.findViewById(R.id.ibBack);
      if (ibBack == null) {
        missingId = "ibBack";
        break missingId;
      }
      ImageView ivInto = rootView.findViewById(R.id.ivInto);
      if (ivInto == null) {
        missingId = "ivInto";
        break missingId;
      }
      LinearLayout layoutMemo = rootView.findViewById(R.id.layout_memo);
      if (layoutMemo == null) {
        missingId = "layoutMemo";
        break missingId;
      }
      LinearLayout llTitle = rootView.findViewById(R.id.llTitle);
      if (llTitle == null) {
        missingId = "llTitle";
        break missingId;
      }
      TextView textRemark = rootView.findViewById(R.id.text_remark);
      if (textRemark == null) {
        missingId = "textRemark";
        break missingId;
      }
      TextView tvAll = rootView.findViewById(R.id.tvAll);
      if (tvAll == null) {
        missingId = "tvAll";
        break missingId;
      }
      TextView tvCanUse = rootView.findViewById(R.id.tvCanUse);
      if (tvCanUse == null) {
        missingId = "tvCanUse";
        break missingId;
      }
      TextView tvExtract = rootView.findViewById(R.id.tvExtract);
      if (tvExtract == null) {
        missingId = "tvExtract";
        break missingId;
      }
      TextView tvFinalCount = rootView.findViewById(R.id.tvFinalCount);
      if (tvFinalCount == null) {
        missingId = "tvFinalCount";
        break missingId;
      }
      TextView tvGetCode = rootView.findViewById(R.id.tvGetCode);
      if (tvGetCode == null) {
        missingId = "tvGetCode";
        break missingId;
      }
      TextView tvTitle = rootView.findViewById(R.id.tvTitle);
      if (tvTitle == null) {
        missingId = "tvTitle";
        break missingId;
      }
      TextView tvUnit1 = rootView.findViewById(R.id.tvUnit1);
      if (tvUnit1 == null) {
        missingId = "tvUnit1";
        break missingId;
      }
      TextView tvUnit2 = rootView.findViewById(R.id.tvUnit2);
      if (tvUnit2 == null) {
        missingId = "tvUnit2";
        break missingId;
      }
      TextView tvUnit3 = rootView.findViewById(R.id.tvUnit3);
      if (tvUnit3 == null) {
        missingId = "tvUnit3";
        break missingId;
      }
      View viewBack = rootView.findViewById(R.id.view_back);
      if (viewBack == null) {
        missingId = "viewBack";
        break missingId;
      }
      ImageView yan = rootView.findViewById(R.id.yan);
      if (yan == null) {
        missingId = "yan";
        break missingId;
      }
      return new ActivityExtractBinding((LinearLayout) rootView, etAddress, etCode, etCount,
          etPassword, etServiceFee, etextRemark, ibBack, ivInto, layoutMemo, llTitle, textRemark,
          tvAll, tvCanUse, tvExtract, tvFinalCount, tvGetCode, tvTitle, tvUnit1, tvUnit2, tvUnit3,
          viewBack, yan);
    }
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
