// Generated by view binder compiler. Do not edit!
package com.bishang366.databinding;

import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import android.support.v7.widget.RecyclerView;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.viewbinding.ViewBinding;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;
import com.bishang366.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.angmarch.views.NiceSpinner;

public final class FrgmentTextThreeBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView btnToLogin;

  @NonNull
  public final View currentTrustUnderline;

  @NonNull
  public final View historyTrustUnderline;

  @NonNull
  public final ImageView ibMessage;

  @NonNull
  public final ImageButton ibOpen;

  @NonNull
  public final ImageView ivCollect;

  @NonNull
  public final LinearLayout llCurrentTrust;

  @NonNull
  public final LinearLayout llHistoryTrust;

  @NonNull
  public final LinearLayout llRoot;

  @NonNull
  public final LinearLayout llTitle;

  @NonNull
  public final RadioGroup mRadioGroup;

  @NonNull
  public final RadioButton mTabOne;

  @NonNull
  public final RadioButton mTabTwo;

  @NonNull
  public final TextView mTvMoney;

  @NonNull
  public final TextView mTvPanJia;

  @NonNull
  public final TextView mTvThree;

  @NonNull
  public final NiceSpinner niceSpinner;

  @NonNull
  public final RecyclerView recyclerOne;

  @NonNull
  public final RecyclerView recyclerThree;

  @NonNull
  public final RecyclerView recyclerTwo;

  @NonNull
  public final TextView textTitleAmount;

  @NonNull
  public final TextView textTitlePrice;

  @NonNull
  public final RelativeLayout textToAll;

  @NonNull
  public final TextView tvCurrentTrust;

  @NonNull
  public final TextView tvHistoryTrust;

  @NonNull
  public final TextView tvMoreRight;

  @NonNull
  public final TextView tvTitle;

  private FrgmentTextThreeBinding(@NonNull LinearLayout rootView, @NonNull TextView btnToLogin,
      @NonNull View currentTrustUnderline, @NonNull View historyTrustUnderline,
      @NonNull ImageView ibMessage, @NonNull ImageButton ibOpen, @NonNull ImageView ivCollect,
      @NonNull LinearLayout llCurrentTrust, @NonNull LinearLayout llHistoryTrust,
      @NonNull LinearLayout llRoot, @NonNull LinearLayout llTitle, @NonNull RadioGroup mRadioGroup,
      @NonNull RadioButton mTabOne, @NonNull RadioButton mTabTwo, @NonNull TextView mTvMoney,
      @NonNull TextView mTvPanJia, @NonNull TextView mTvThree, @NonNull NiceSpinner niceSpinner,
      @NonNull RecyclerView recyclerOne, @NonNull RecyclerView recyclerThree,
      @NonNull RecyclerView recyclerTwo, @NonNull TextView textTitleAmount,
      @NonNull TextView textTitlePrice, @NonNull RelativeLayout textToAll,
      @NonNull TextView tvCurrentTrust, @NonNull TextView tvHistoryTrust,
      @NonNull TextView tvMoreRight, @NonNull TextView tvTitle) {
    this.rootView = rootView;
    this.btnToLogin = btnToLogin;
    this.currentTrustUnderline = currentTrustUnderline;
    this.historyTrustUnderline = historyTrustUnderline;
    this.ibMessage = ibMessage;
    this.ibOpen = ibOpen;
    this.ivCollect = ivCollect;
    this.llCurrentTrust = llCurrentTrust;
    this.llHistoryTrust = llHistoryTrust;
    this.llRoot = llRoot;
    this.llTitle = llTitle;
    this.mRadioGroup = mRadioGroup;
    this.mTabOne = mTabOne;
    this.mTabTwo = mTabTwo;
    this.mTvMoney = mTvMoney;
    this.mTvPanJia = mTvPanJia;
    this.mTvThree = mTvThree;
    this.niceSpinner = niceSpinner;
    this.recyclerOne = recyclerOne;
    this.recyclerThree = recyclerThree;
    this.recyclerTwo = recyclerTwo;
    this.textTitleAmount = textTitleAmount;
    this.textTitlePrice = textTitlePrice;
    this.textToAll = textToAll;
    this.tvCurrentTrust = tvCurrentTrust;
    this.tvHistoryTrust = tvHistoryTrust;
    this.tvMoreRight = tvMoreRight;
    this.tvTitle = tvTitle;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FrgmentTextThreeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FrgmentTextThreeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.frgment_text_three, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FrgmentTextThreeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    String missingId;
    missingId: {
      TextView btnToLogin = rootView.findViewById(R.id.btn_toLogin);
      if (btnToLogin == null) {
        missingId = "btnToLogin";
        break missingId;
      }
      View currentTrustUnderline = rootView.findViewById(R.id.current_trust_underline);
      if (currentTrustUnderline == null) {
        missingId = "currentTrustUnderline";
        break missingId;
      }
      View historyTrustUnderline = rootView.findViewById(R.id.history_trust_underline);
      if (historyTrustUnderline == null) {
        missingId = "historyTrustUnderline";
        break missingId;
      }
      ImageView ibMessage = rootView.findViewById(R.id.ibMessage);
      if (ibMessage == null) {
        missingId = "ibMessage";
        break missingId;
      }
      ImageButton ibOpen = rootView.findViewById(R.id.ibOpen);
      if (ibOpen == null) {
        missingId = "ibOpen";
        break missingId;
      }
      ImageView ivCollect = rootView.findViewById(R.id.ivCollect);
      if (ivCollect == null) {
        missingId = "ivCollect";
        break missingId;
      }
      LinearLayout llCurrentTrust = rootView.findViewById(R.id.ll_current_trust);
      if (llCurrentTrust == null) {
        missingId = "llCurrentTrust";
        break missingId;
      }
      LinearLayout llHistoryTrust = rootView.findViewById(R.id.ll_history_trust);
      if (llHistoryTrust == null) {
        missingId = "llHistoryTrust";
        break missingId;
      }
      LinearLayout llRoot = rootView.findViewById(R.id.llRoot);
      if (llRoot == null) {
        missingId = "llRoot";
        break missingId;
      }
      LinearLayout llTitle = rootView.findViewById(R.id.llTitle);
      if (llTitle == null) {
        missingId = "llTitle";
        break missingId;
      }
      RadioGroup mRadioGroup = rootView.findViewById(R.id.mRadioGroup);
      if (mRadioGroup == null) {
        missingId = "mRadioGroup";
        break missingId;
      }
      RadioButton mTabOne = rootView.findViewById(R.id.mTabOne);
      if (mTabOne == null) {
        missingId = "mTabOne";
        break missingId;
      }
      RadioButton mTabTwo = rootView.findViewById(R.id.mTabTwo);
      if (mTabTwo == null) {
        missingId = "mTabTwo";
        break missingId;
      }
      TextView mTvMoney = rootView.findViewById(R.id.mTvMoney);
      if (mTvMoney == null) {
        missingId = "mTvMoney";
        break missingId;
      }
      TextView mTvPanJia = rootView.findViewById(R.id.mTvPanJia);
      if (mTvPanJia == null) {
        missingId = "mTvPanJia";
        break missingId;
      }
      TextView mTvThree = rootView.findViewById(R.id.mTvThree);
      if (mTvThree == null) {
        missingId = "mTvThree";
        break missingId;
      }
      NiceSpinner niceSpinner = rootView.findViewById(R.id.nice_spinner);
      if (niceSpinner == null) {
        missingId = "niceSpinner";
        break missingId;
      }
      RecyclerView recyclerOne = rootView.findViewById(R.id.recyclerOne);
      if (recyclerOne == null) {
        missingId = "recyclerOne";
        break missingId;
      }
      RecyclerView recyclerThree = rootView.findViewById(R.id.recyclerThree);
      if (recyclerThree == null) {
        missingId = "recyclerThree";
        break missingId;
      }
      RecyclerView recyclerTwo = rootView.findViewById(R.id.recyclerTwo);
      if (recyclerTwo == null) {
        missingId = "recyclerTwo";
        break missingId;
      }
      TextView textTitleAmount = rootView.findViewById(R.id.text_title_amount);
      if (textTitleAmount == null) {
        missingId = "textTitleAmount";
        break missingId;
      }
      TextView textTitlePrice = rootView.findViewById(R.id.text_title_price);
      if (textTitlePrice == null) {
        missingId = "textTitlePrice";
        break missingId;
      }
      RelativeLayout textToAll = rootView.findViewById(R.id.text_to_all);
      if (textToAll == null) {
        missingId = "textToAll";
        break missingId;
      }
      TextView tvCurrentTrust = rootView.findViewById(R.id.tv_current_trust);
      if (tvCurrentTrust == null) {
        missingId = "tvCurrentTrust";
        break missingId;
      }
      TextView tvHistoryTrust = rootView.findViewById(R.id.tv_history_trust);
      if (tvHistoryTrust == null) {
        missingId = "tvHistoryTrust";
        break missingId;
      }
      TextView tvMoreRight = rootView.findViewById(R.id.tv_more_right);
      if (tvMoreRight == null) {
        missingId = "tvMoreRight";
        break missingId;
      }
      TextView tvTitle = rootView.findViewById(R.id.tvTitle);
      if (tvTitle == null) {
        missingId = "tvTitle";
        break missingId;
      }
      return new FrgmentTextThreeBinding((LinearLayout) rootView, btnToLogin, currentTrustUnderline,
          historyTrustUnderline, ibMessage, ibOpen, ivCollect, llCurrentTrust, llHistoryTrust,
          llRoot, llTitle, mRadioGroup, mTabOne, mTabTwo, mTvMoney, mTvPanJia, mTvThree,
          niceSpinner, recyclerOne, recyclerThree, recyclerTwo, textTitleAmount, textTitlePrice,
          textToAll, tvCurrentTrust, tvHistoryTrust, tvMoreRight, tvTitle);
    }
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
