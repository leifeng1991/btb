// Generated by view binder compiler. Do not edit!
package com.bishang366.databinding;

import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.viewbinding.ViewBinding;
import android.widget.LinearLayout;
import android.widget.TextView;
import com.bishang366.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AdapterTrustHistoryLayoutBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView historyAverage;

  @NonNull
  public final TextView historyCancel;

  @NonNull
  public final TextView historyFive;

  @NonNull
  public final TextView historyFour;

  @NonNull
  public final TextView historyNum;

  @NonNull
  public final TextView historyNumS;

  @NonNull
  public final TextView historyOne;

  @NonNull
  public final TextView historySix;

  @NonNull
  public final TextView historySuccess;

  @NonNull
  public final TextView historyThree;

  @NonNull
  public final TextView historyTotal;

  @NonNull
  public final TextView historyTwo;

  @NonNull
  public final TextView historyType;

  @NonNull
  public final TextView historyWei;

  private AdapterTrustHistoryLayoutBinding(@NonNull LinearLayout rootView,
      @NonNull TextView historyAverage, @NonNull TextView historyCancel,
      @NonNull TextView historyFive, @NonNull TextView historyFour, @NonNull TextView historyNum,
      @NonNull TextView historyNumS, @NonNull TextView historyOne, @NonNull TextView historySix,
      @NonNull TextView historySuccess, @NonNull TextView historyThree,
      @NonNull TextView historyTotal, @NonNull TextView historyTwo, @NonNull TextView historyType,
      @NonNull TextView historyWei) {
    this.rootView = rootView;
    this.historyAverage = historyAverage;
    this.historyCancel = historyCancel;
    this.historyFive = historyFive;
    this.historyFour = historyFour;
    this.historyNum = historyNum;
    this.historyNumS = historyNumS;
    this.historyOne = historyOne;
    this.historySix = historySix;
    this.historySuccess = historySuccess;
    this.historyThree = historyThree;
    this.historyTotal = historyTotal;
    this.historyTwo = historyTwo;
    this.historyType = historyType;
    this.historyWei = historyWei;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AdapterTrustHistoryLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AdapterTrustHistoryLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.adapter_trust_history_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AdapterTrustHistoryLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    String missingId;
    missingId: {
      TextView historyAverage = rootView.findViewById(R.id.history_average);
      if (historyAverage == null) {
        missingId = "historyAverage";
        break missingId;
      }
      TextView historyCancel = rootView.findViewById(R.id.history_cancel);
      if (historyCancel == null) {
        missingId = "historyCancel";
        break missingId;
      }
      TextView historyFive = rootView.findViewById(R.id.history_five);
      if (historyFive == null) {
        missingId = "historyFive";
        break missingId;
      }
      TextView historyFour = rootView.findViewById(R.id.history_four);
      if (historyFour == null) {
        missingId = "historyFour";
        break missingId;
      }
      TextView historyNum = rootView.findViewById(R.id.history_num);
      if (historyNum == null) {
        missingId = "historyNum";
        break missingId;
      }
      TextView historyNumS = rootView.findViewById(R.id.history_num_s);
      if (historyNumS == null) {
        missingId = "historyNumS";
        break missingId;
      }
      TextView historyOne = rootView.findViewById(R.id.history_one);
      if (historyOne == null) {
        missingId = "historyOne";
        break missingId;
      }
      TextView historySix = rootView.findViewById(R.id.history_six);
      if (historySix == null) {
        missingId = "historySix";
        break missingId;
      }
      TextView historySuccess = rootView.findViewById(R.id.history_success);
      if (historySuccess == null) {
        missingId = "historySuccess";
        break missingId;
      }
      TextView historyThree = rootView.findViewById(R.id.history_three);
      if (historyThree == null) {
        missingId = "historyThree";
        break missingId;
      }
      TextView historyTotal = rootView.findViewById(R.id.history_total);
      if (historyTotal == null) {
        missingId = "historyTotal";
        break missingId;
      }
      TextView historyTwo = rootView.findViewById(R.id.history_two);
      if (historyTwo == null) {
        missingId = "historyTwo";
        break missingId;
      }
      TextView historyType = rootView.findViewById(R.id.history_type);
      if (historyType == null) {
        missingId = "historyType";
        break missingId;
      }
      TextView historyWei = rootView.findViewById(R.id.history_wei);
      if (historyWei == null) {
        missingId = "historyWei";
        break missingId;
      }
      return new AdapterTrustHistoryLayoutBinding((LinearLayout) rootView, historyAverage,
          historyCancel, historyFive, historyFour, historyNum, historyNumS, historyOne, historySix,
          historySuccess, historyThree, historyTotal, historyTwo, historyType, historyWei);
    }
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
