// Generated by view binder compiler. Do not edit!
package com.bishang366.databinding;

import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.viewbinding.ViewBinding;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import com.bishang366.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AdapterChatBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView ivHeaderLeft;

  @NonNull
  public final ImageView ivHeaderRight;

  @NonNull
  public final LinearLayout llLeft;

  @NonNull
  public final LinearLayout llRight;

  @NonNull
  public final TextView tvMessageLeft;

  @NonNull
  public final TextView tvMessageRight;

  private AdapterChatBinding(@NonNull LinearLayout rootView, @NonNull ImageView ivHeaderLeft,
      @NonNull ImageView ivHeaderRight, @NonNull LinearLayout llLeft, @NonNull LinearLayout llRight,
      @NonNull TextView tvMessageLeft, @NonNull TextView tvMessageRight) {
    this.rootView = rootView;
    this.ivHeaderLeft = ivHeaderLeft;
    this.ivHeaderRight = ivHeaderRight;
    this.llLeft = llLeft;
    this.llRight = llRight;
    this.tvMessageLeft = tvMessageLeft;
    this.tvMessageRight = tvMessageRight;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AdapterChatBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AdapterChatBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.adapter_chat, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AdapterChatBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    String missingId;
    missingId: {
      ImageView ivHeaderLeft = rootView.findViewById(R.id.ivHeaderLeft);
      if (ivHeaderLeft == null) {
        missingId = "ivHeaderLeft";
        break missingId;
      }
      ImageView ivHeaderRight = rootView.findViewById(R.id.ivHeaderRight);
      if (ivHeaderRight == null) {
        missingId = "ivHeaderRight";
        break missingId;
      }
      LinearLayout llLeft = rootView.findViewById(R.id.llLeft);
      if (llLeft == null) {
        missingId = "llLeft";
        break missingId;
      }
      LinearLayout llRight = rootView.findViewById(R.id.llRight);
      if (llRight == null) {
        missingId = "llRight";
        break missingId;
      }
      TextView tvMessageLeft = rootView.findViewById(R.id.tvMessageLeft);
      if (tvMessageLeft == null) {
        missingId = "tvMessageLeft";
        break missingId;
      }
      TextView tvMessageRight = rootView.findViewById(R.id.tvMessageRight);
      if (tvMessageRight == null) {
        missingId = "tvMessageRight";
        break missingId;
      }
      return new AdapterChatBinding((LinearLayout) rootView, ivHeaderLeft, ivHeaderRight, llLeft,
          llRight, tvMessageLeft, tvMessageRight);
    }
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
