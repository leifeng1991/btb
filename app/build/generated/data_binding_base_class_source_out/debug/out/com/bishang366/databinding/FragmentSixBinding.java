// Generated by view binder compiler. Do not edit!
package com.bishang366.databinding;

import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import android.support.design.widget.TabLayout;
import android.support.v4.widget.SwipeRefreshLayout;
import android.support.v7.widget.RecyclerView;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.viewbinding.ViewBinding;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;
import com.bishang366.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSixBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView btnToLogin;

  @NonNull
  public final TextView buyEarnings;

  @NonNull
  public final TextView buyFive;

  @NonNull
  public final TextView buyFour;

  @NonNull
  public final TextView buyOne;

  @NonNull
  public final TextView buyRate;

  @NonNull
  public final TextView buySix;

  @NonNull
  public final TextView buyThree;

  @NonNull
  public final TextView buyTwo;

  @NonNull
  public final View currentTrustUnderline;

  @NonNull
  public final View historyTrustUnderline;

  @NonNull
  public final ImageView ibMessage;

  @NonNull
  public final ImageButton ibOpen;

  @NonNull
  public final ImageView ivCollect;

  @NonNull
  public final LinearLayout llBuy;

  @NonNull
  public final LinearLayout llCurrentTrust;

  @NonNull
  public final LinearLayout llDeal;

  @NonNull
  public final LinearLayout llHistoryTrust;

  @NonNull
  public final LinearLayout llRoot;

  @NonNull
  public final LinearLayout llSell;

  @NonNull
  public final LinearLayout llTitle;

  @NonNull
  public final RadioGroup mRadioGroup;

  @NonNull
  public final RadioButton mTabOne;

  @NonNull
  public final RadioButton mTabTwo;

  @NonNull
  public final TextView mTvMoney;

  @NonNull
  public final TextView mTvPanJia;

  @NonNull
  public final TextView mTvsix;

  @NonNull
  public final RecyclerView recyclerOne;

  @NonNull
  public final RecyclerView recyclerTwo;

  @NonNull
  public final RecyclerView recyclersix;

  @NonNull
  public final SwipeRefreshLayout refreshLayout;

  @NonNull
  public final RelativeLayout rlEntrustSpinner;

  @NonNull
  public final RelativeLayout rlModelSpinner;

  @NonNull
  public final RelativeLayout rlMultiplesSpinner;

  @NonNull
  public final TextView sellEarnings;

  @NonNull
  public final TextView sellFive;

  @NonNull
  public final TextView sellFour;

  @NonNull
  public final TextView sellOne;

  @NonNull
  public final TextView sellRate;

  @NonNull
  public final TextView sellSix;

  @NonNull
  public final TextView sellThree;

  @NonNull
  public final TextView sellTwo;

  @NonNull
  public final TabLayout tab;

  @NonNull
  public final TextView textTitleAmount;

  @NonNull
  public final TextView textTitlePrice;

  @NonNull
  public final RelativeLayout textToAll;

  @NonNull
  public final TextView tvCurrentTrust;

  @NonNull
  public final TextView tvEntrust;

  @NonNull
  public final TextView tvFlat1;

  @NonNull
  public final TextView tvFlat2;

  @NonNull
  public final TextView tvHistoryTrust;

  @NonNull
  public final TextView tvModel;

  @NonNull
  public final TextView tvMoreRight;

  @NonNull
  public final TextView tvMultiples;

  @NonNull
  public final TextView tvTitle;

  @NonNull
  public final TextView tvTitleOption;

  @NonNull
  public final TextView tvTitleTop;

  @NonNull
  public final View viewLine;

  private FragmentSixBinding(@NonNull LinearLayout rootView, @NonNull TextView btnToLogin,
      @NonNull TextView buyEarnings, @NonNull TextView buyFive, @NonNull TextView buyFour,
      @NonNull TextView buyOne, @NonNull TextView buyRate, @NonNull TextView buySix,
      @NonNull TextView buyThree, @NonNull TextView buyTwo, @NonNull View currentTrustUnderline,
      @NonNull View historyTrustUnderline, @NonNull ImageView ibMessage,
      @NonNull ImageButton ibOpen, @NonNull ImageView ivCollect, @NonNull LinearLayout llBuy,
      @NonNull LinearLayout llCurrentTrust, @NonNull LinearLayout llDeal,
      @NonNull LinearLayout llHistoryTrust, @NonNull LinearLayout llRoot,
      @NonNull LinearLayout llSell, @NonNull LinearLayout llTitle, @NonNull RadioGroup mRadioGroup,
      @NonNull RadioButton mTabOne, @NonNull RadioButton mTabTwo, @NonNull TextView mTvMoney,
      @NonNull TextView mTvPanJia, @NonNull TextView mTvsix, @NonNull RecyclerView recyclerOne,
      @NonNull RecyclerView recyclerTwo, @NonNull RecyclerView recyclersix,
      @NonNull SwipeRefreshLayout refreshLayout, @NonNull RelativeLayout rlEntrustSpinner,
      @NonNull RelativeLayout rlModelSpinner, @NonNull RelativeLayout rlMultiplesSpinner,
      @NonNull TextView sellEarnings, @NonNull TextView sellFive, @NonNull TextView sellFour,
      @NonNull TextView sellOne, @NonNull TextView sellRate, @NonNull TextView sellSix,
      @NonNull TextView sellThree, @NonNull TextView sellTwo, @NonNull TabLayout tab,
      @NonNull TextView textTitleAmount, @NonNull TextView textTitlePrice,
      @NonNull RelativeLayout textToAll, @NonNull TextView tvCurrentTrust,
      @NonNull TextView tvEntrust, @NonNull TextView tvFlat1, @NonNull TextView tvFlat2,
      @NonNull TextView tvHistoryTrust, @NonNull TextView tvModel, @NonNull TextView tvMoreRight,
      @NonNull TextView tvMultiples, @NonNull TextView tvTitle, @NonNull TextView tvTitleOption,
      @NonNull TextView tvTitleTop, @NonNull View viewLine) {
    this.rootView = rootView;
    this.btnToLogin = btnToLogin;
    this.buyEarnings = buyEarnings;
    this.buyFive = buyFive;
    this.buyFour = buyFour;
    this.buyOne = buyOne;
    this.buyRate = buyRate;
    this.buySix = buySix;
    this.buyThree = buyThree;
    this.buyTwo = buyTwo;
    this.currentTrustUnderline = currentTrustUnderline;
    this.historyTrustUnderline = historyTrustUnderline;
    this.ibMessage = ibMessage;
    this.ibOpen = ibOpen;
    this.ivCollect = ivCollect;
    this.llBuy = llBuy;
    this.llCurrentTrust = llCurrentTrust;
    this.llDeal = llDeal;
    this.llHistoryTrust = llHistoryTrust;
    this.llRoot = llRoot;
    this.llSell = llSell;
    this.llTitle = llTitle;
    this.mRadioGroup = mRadioGroup;
    this.mTabOne = mTabOne;
    this.mTabTwo = mTabTwo;
    this.mTvMoney = mTvMoney;
    this.mTvPanJia = mTvPanJia;
    this.mTvsix = mTvsix;
    this.recyclerOne = recyclerOne;
    this.recyclerTwo = recyclerTwo;
    this.recyclersix = recyclersix;
    this.refreshLayout = refreshLayout;
    this.rlEntrustSpinner = rlEntrustSpinner;
    this.rlModelSpinner = rlModelSpinner;
    this.rlMultiplesSpinner = rlMultiplesSpinner;
    this.sellEarnings = sellEarnings;
    this.sellFive = sellFive;
    this.sellFour = sellFour;
    this.sellOne = sellOne;
    this.sellRate = sellRate;
    this.sellSix = sellSix;
    this.sellThree = sellThree;
    this.sellTwo = sellTwo;
    this.tab = tab;
    this.textTitleAmount = textTitleAmount;
    this.textTitlePrice = textTitlePrice;
    this.textToAll = textToAll;
    this.tvCurrentTrust = tvCurrentTrust;
    this.tvEntrust = tvEntrust;
    this.tvFlat1 = tvFlat1;
    this.tvFlat2 = tvFlat2;
    this.tvHistoryTrust = tvHistoryTrust;
    this.tvModel = tvModel;
    this.tvMoreRight = tvMoreRight;
    this.tvMultiples = tvMultiples;
    this.tvTitle = tvTitle;
    this.tvTitleOption = tvTitleOption;
    this.tvTitleTop = tvTitleTop;
    this.viewLine = viewLine;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSixBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSixBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_six, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSixBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    String missingId;
    missingId: {
      TextView btnToLogin = rootView.findViewById(R.id.btn_toLogin);
      if (btnToLogin == null) {
        missingId = "btnToLogin";
        break missingId;
      }
      TextView buyEarnings = rootView.findViewById(R.id.buy_earnings);
      if (buyEarnings == null) {
        missingId = "buyEarnings";
        break missingId;
      }
      TextView buyFive = rootView.findViewById(R.id.buy_five);
      if (buyFive == null) {
        missingId = "buyFive";
        break missingId;
      }
      TextView buyFour = rootView.findViewById(R.id.buy_four);
      if (buyFour == null) {
        missingId = "buyFour";
        break missingId;
      }
      TextView buyOne = rootView.findViewById(R.id.buy_one);
      if (buyOne == null) {
        missingId = "buyOne";
        break missingId;
      }
      TextView buyRate = rootView.findViewById(R.id.buy_rate);
      if (buyRate == null) {
        missingId = "buyRate";
        break missingId;
      }
      TextView buySix = rootView.findViewById(R.id.buy_six);
      if (buySix == null) {
        missingId = "buySix";
        break missingId;
      }
      TextView buyThree = rootView.findViewById(R.id.buy_three);
      if (buyThree == null) {
        missingId = "buyThree";
        break missingId;
      }
      TextView buyTwo = rootView.findViewById(R.id.buy_two);
      if (buyTwo == null) {
        missingId = "buyTwo";
        break missingId;
      }
      View currentTrustUnderline = rootView.findViewById(R.id.current_trust_underline);
      if (currentTrustUnderline == null) {
        missingId = "currentTrustUnderline";
        break missingId;
      }
      View historyTrustUnderline = rootView.findViewById(R.id.history_trust_underline);
      if (historyTrustUnderline == null) {
        missingId = "historyTrustUnderline";
        break missingId;
      }
      ImageView ibMessage = rootView.findViewById(R.id.ibMessage);
      if (ibMessage == null) {
        missingId = "ibMessage";
        break missingId;
      }
      ImageButton ibOpen = rootView.findViewById(R.id.ibOpen);
      if (ibOpen == null) {
        missingId = "ibOpen";
        break missingId;
      }
      ImageView ivCollect = rootView.findViewById(R.id.ivCollect);
      if (ivCollect == null) {
        missingId = "ivCollect";
        break missingId;
      }
      LinearLayout llBuy = rootView.findViewById(R.id.ll_buy);
      if (llBuy == null) {
        missingId = "llBuy";
        break missingId;
      }
      LinearLayout llCurrentTrust = rootView.findViewById(R.id.ll_current_trust);
      if (llCurrentTrust == null) {
        missingId = "llCurrentTrust";
        break missingId;
      }
      LinearLayout llDeal = rootView.findViewById(R.id.ll_deal);
      if (llDeal == null) {
        missingId = "llDeal";
        break missingId;
      }
      LinearLayout llHistoryTrust = rootView.findViewById(R.id.ll_history_trust);
      if (llHistoryTrust == null) {
        missingId = "llHistoryTrust";
        break missingId;
      }
      LinearLayout llRoot = rootView.findViewById(R.id.llRoot);
      if (llRoot == null) {
        missingId = "llRoot";
        break missingId;
      }
      LinearLayout llSell = rootView.findViewById(R.id.ll_sell);
      if (llSell == null) {
        missingId = "llSell";
        break missingId;
      }
      LinearLayout llTitle = rootView.findViewById(R.id.llTitle);
      if (llTitle == null) {
        missingId = "llTitle";
        break missingId;
      }
      RadioGroup mRadioGroup = rootView.findViewById(R.id.mRadioGroup);
      if (mRadioGroup == null) {
        missingId = "mRadioGroup";
        break missingId;
      }
      RadioButton mTabOne = rootView.findViewById(R.id.mTabOne);
      if (mTabOne == null) {
        missingId = "mTabOne";
        break missingId;
      }
      RadioButton mTabTwo = rootView.findViewById(R.id.mTabTwo);
      if (mTabTwo == null) {
        missingId = "mTabTwo";
        break missingId;
      }
      TextView mTvMoney = rootView.findViewById(R.id.mTvMoney);
      if (mTvMoney == null) {
        missingId = "mTvMoney";
        break missingId;
      }
      TextView mTvPanJia = rootView.findViewById(R.id.mTvPanJia);
      if (mTvPanJia == null) {
        missingId = "mTvPanJia";
        break missingId;
      }
      TextView mTvsix = rootView.findViewById(R.id.mTvsix);
      if (mTvsix == null) {
        missingId = "mTvsix";
        break missingId;
      }
      RecyclerView recyclerOne = rootView.findViewById(R.id.recyclerOne);
      if (recyclerOne == null) {
        missingId = "recyclerOne";
        break missingId;
      }
      RecyclerView recyclerTwo = rootView.findViewById(R.id.recyclerTwo);
      if (recyclerTwo == null) {
        missingId = "recyclerTwo";
        break missingId;
      }
      RecyclerView recyclersix = rootView.findViewById(R.id.recyclersix);
      if (recyclersix == null) {
        missingId = "recyclersix";
        break missingId;
      }
      SwipeRefreshLayout refreshLayout = rootView.findViewById(R.id.refreshLayout);
      if (refreshLayout == null) {
        missingId = "refreshLayout";
        break missingId;
      }
      RelativeLayout rlEntrustSpinner = rootView.findViewById(R.id.rl_entrust_spinner);
      if (rlEntrustSpinner == null) {
        missingId = "rlEntrustSpinner";
        break missingId;
      }
      RelativeLayout rlModelSpinner = rootView.findViewById(R.id.rl_model_spinner);
      if (rlModelSpinner == null) {
        missingId = "rlModelSpinner";
        break missingId;
      }
      RelativeLayout rlMultiplesSpinner = rootView.findViewById(R.id.rl_multiples_spinner);
      if (rlMultiplesSpinner == null) {
        missingId = "rlMultiplesSpinner";
        break missingId;
      }
      TextView sellEarnings = rootView.findViewById(R.id.sell_earnings);
      if (sellEarnings == null) {
        missingId = "sellEarnings";
        break missingId;
      }
      TextView sellFive = rootView.findViewById(R.id.sell_five);
      if (sellFive == null) {
        missingId = "sellFive";
        break missingId;
      }
      TextView sellFour = rootView.findViewById(R.id.sell_four);
      if (sellFour == null) {
        missingId = "sellFour";
        break missingId;
      }
      TextView sellOne = rootView.findViewById(R.id.sell_one);
      if (sellOne == null) {
        missingId = "sellOne";
        break missingId;
      }
      TextView sellRate = rootView.findViewById(R.id.sell_rate);
      if (sellRate == null) {
        missingId = "sellRate";
        break missingId;
      }
      TextView sellSix = rootView.findViewById(R.id.sell_six);
      if (sellSix == null) {
        missingId = "sellSix";
        break missingId;
      }
      TextView sellThree = rootView.findViewById(R.id.sell_three);
      if (sellThree == null) {
        missingId = "sellThree";
        break missingId;
      }
      TextView sellTwo = rootView.findViewById(R.id.sell_two);
      if (sellTwo == null) {
        missingId = "sellTwo";
        break missingId;
      }
      TabLayout tab = rootView.findViewById(R.id.tab);
      if (tab == null) {
        missingId = "tab";
        break missingId;
      }
      TextView textTitleAmount = rootView.findViewById(R.id.text_title_amount);
      if (textTitleAmount == null) {
        missingId = "textTitleAmount";
        break missingId;
      }
      TextView textTitlePrice = rootView.findViewById(R.id.text_title_price);
      if (textTitlePrice == null) {
        missingId = "textTitlePrice";
        break missingId;
      }
      RelativeLayout textToAll = rootView.findViewById(R.id.text_to_all);
      if (textToAll == null) {
        missingId = "textToAll";
        break missingId;
      }
      TextView tvCurrentTrust = rootView.findViewById(R.id.tv_current_trust);
      if (tvCurrentTrust == null) {
        missingId = "tvCurrentTrust";
        break missingId;
      }
      TextView tvEntrust = rootView.findViewById(R.id.tv_entrust);
      if (tvEntrust == null) {
        missingId = "tvEntrust";
        break missingId;
      }
      TextView tvFlat1 = rootView.findViewById(R.id.tv_flat1);
      if (tvFlat1 == null) {
        missingId = "tvFlat1";
        break missingId;
      }
      TextView tvFlat2 = rootView.findViewById(R.id.tv_flat2);
      if (tvFlat2 == null) {
        missingId = "tvFlat2";
        break missingId;
      }
      TextView tvHistoryTrust = rootView.findViewById(R.id.tv_history_trust);
      if (tvHistoryTrust == null) {
        missingId = "tvHistoryTrust";
        break missingId;
      }
      TextView tvModel = rootView.findViewById(R.id.tv_model);
      if (tvModel == null) {
        missingId = "tvModel";
        break missingId;
      }
      TextView tvMoreRight = rootView.findViewById(R.id.tv_more_right);
      if (tvMoreRight == null) {
        missingId = "tvMoreRight";
        break missingId;
      }
      TextView tvMultiples = rootView.findViewById(R.id.tv_multiples);
      if (tvMultiples == null) {
        missingId = "tvMultiples";
        break missingId;
      }
      TextView tvTitle = rootView.findViewById(R.id.tvTitle);
      if (tvTitle == null) {
        missingId = "tvTitle";
        break missingId;
      }
      TextView tvTitleOption = rootView.findViewById(R.id.tvTitleOption);
      if (tvTitleOption == null) {
        missingId = "tvTitleOption";
        break missingId;
      }
      TextView tvTitleTop = rootView.findViewById(R.id.tvTitleTop);
      if (tvTitleTop == null) {
        missingId = "tvTitleTop";
        break missingId;
      }
      View viewLine = rootView.findViewById(R.id.view_line);
      if (viewLine == null) {
        missingId = "viewLine";
        break missingId;
      }
      return new FragmentSixBinding((LinearLayout) rootView, btnToLogin, buyEarnings, buyFive,
          buyFour, buyOne, buyRate, buySix, buyThree, buyTwo, currentTrustUnderline,
          historyTrustUnderline, ibMessage, ibOpen, ivCollect, llBuy, llCurrentTrust, llDeal,
          llHistoryTrust, llRoot, llSell, llTitle, mRadioGroup, mTabOne, mTabTwo, mTvMoney,
          mTvPanJia, mTvsix, recyclerOne, recyclerTwo, recyclersix, refreshLayout, rlEntrustSpinner,
          rlModelSpinner, rlMultiplesSpinner, sellEarnings, sellFive, sellFour, sellOne, sellRate,
          sellSix, sellThree, sellTwo, tab, textTitleAmount, textTitlePrice, textToAll,
          tvCurrentTrust, tvEntrust, tvFlat1, tvFlat2, tvHistoryTrust, tvModel, tvMoreRight,
          tvMultiples, tvTitle, tvTitleOption, tvTitleTop, viewLine);
    }
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
