// Generated by view binder compiler. Do not edit!
package com.bishang366.databinding;

import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import android.support.v4.widget.SwipeRefreshLayout;
import android.support.v7.widget.RecyclerView;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.viewbinding.ViewBinding;
import android.widget.LinearLayout;
import com.bishang366.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentIngOrderBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final SwipeRefreshLayout refreshLayout;

  @NonNull
  public final RecyclerView rvIngOrder;

  private FragmentIngOrderBinding(@NonNull LinearLayout rootView,
      @NonNull SwipeRefreshLayout refreshLayout, @NonNull RecyclerView rvIngOrder) {
    this.rootView = rootView;
    this.refreshLayout = refreshLayout;
    this.rvIngOrder = rvIngOrder;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentIngOrderBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentIngOrderBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_ing_order, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentIngOrderBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    String missingId;
    missingId: {
      SwipeRefreshLayout refreshLayout = rootView.findViewById(R.id.refreshLayout);
      if (refreshLayout == null) {
        missingId = "refreshLayout";
        break missingId;
      }
      RecyclerView rvIngOrder = rootView.findViewById(R.id.rvIngOrder);
      if (rvIngOrder == null) {
        missingId = "rvIngOrder";
        break missingId;
      }
      return new FragmentIngOrderBinding((LinearLayout) rootView, refreshLayout, rvIngOrder);
    }
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
