// Generated by view binder compiler. Do not edit!
package com.bishang366.databinding;

import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.viewbinding.ViewBinding;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import com.bishang366.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemDepthBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView buyView;

  @NonNull
  public final LinearLayout llLeft;

  @NonNull
  public final ImageView sellView;

  @NonNull
  public final TextView tvBuy;

  @NonNull
  public final TextView tvBuyNumber;

  @NonNull
  public final TextView tvBuyPrice;

  @NonNull
  public final TextView tvSell;

  @NonNull
  public final TextView tvSellNumber;

  @NonNull
  public final TextView tvSellPrice;

  private ItemDepthBinding(@NonNull LinearLayout rootView, @NonNull ImageView buyView,
      @NonNull LinearLayout llLeft, @NonNull ImageView sellView, @NonNull TextView tvBuy,
      @NonNull TextView tvBuyNumber, @NonNull TextView tvBuyPrice, @NonNull TextView tvSell,
      @NonNull TextView tvSellNumber, @NonNull TextView tvSellPrice) {
    this.rootView = rootView;
    this.buyView = buyView;
    this.llLeft = llLeft;
    this.sellView = sellView;
    this.tvBuy = tvBuy;
    this.tvBuyNumber = tvBuyNumber;
    this.tvBuyPrice = tvBuyPrice;
    this.tvSell = tvSell;
    this.tvSellNumber = tvSellNumber;
    this.tvSellPrice = tvSellPrice;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemDepthBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemDepthBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_depth, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemDepthBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    String missingId;
    missingId: {
      ImageView buyView = rootView.findViewById(R.id.buyView);
      if (buyView == null) {
        missingId = "buyView";
        break missingId;
      }
      LinearLayout llLeft = rootView.findViewById(R.id.llLeft);
      if (llLeft == null) {
        missingId = "llLeft";
        break missingId;
      }
      ImageView sellView = rootView.findViewById(R.id.sellView);
      if (sellView == null) {
        missingId = "sellView";
        break missingId;
      }
      TextView tvBuy = rootView.findViewById(R.id.tvBuy);
      if (tvBuy == null) {
        missingId = "tvBuy";
        break missingId;
      }
      TextView tvBuyNumber = rootView.findViewById(R.id.tvBuyNumber);
      if (tvBuyNumber == null) {
        missingId = "tvBuyNumber";
        break missingId;
      }
      TextView tvBuyPrice = rootView.findViewById(R.id.tvBuyPrice);
      if (tvBuyPrice == null) {
        missingId = "tvBuyPrice";
        break missingId;
      }
      TextView tvSell = rootView.findViewById(R.id.tvSell);
      if (tvSell == null) {
        missingId = "tvSell";
        break missingId;
      }
      TextView tvSellNumber = rootView.findViewById(R.id.tvSellNumber);
      if (tvSellNumber == null) {
        missingId = "tvSellNumber";
        break missingId;
      }
      TextView tvSellPrice = rootView.findViewById(R.id.tvSellPrice);
      if (tvSellPrice == null) {
        missingId = "tvSellPrice";
        break missingId;
      }
      return new ItemDepthBinding((LinearLayout) rootView, buyView, llLeft, sellView, tvBuy,
          tvBuyNumber, tvBuyPrice, tvSell, tvSellNumber, tvSellPrice);
    }
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
