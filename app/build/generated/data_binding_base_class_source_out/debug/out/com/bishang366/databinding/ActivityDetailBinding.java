// Generated by view binder compiler. Do not edit!
package com.bishang366.databinding;

import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import android.support.constraint.ConstraintLayout;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.viewbinding.ViewBinding;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import com.bishang366.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDetailBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView alreadyamount;

  @NonNull
  public final TextView alreadyholdamount;

  @NonNull
  public final ConstraintLayout amountlayout;

  @NonNull
  public final TextView balancelabel;

  @NonNull
  public final TextView button;

  @NonNull
  public final LinearLayout contentlayout;

  @NonNull
  public final TextView freezeAmount;

  @NonNull
  public final TextView freezetip;

  @NonNull
  public final ConstraintLayout holderlayout;

  @NonNull
  public final ImageButton ibBack;

  @NonNull
  public final ImageButton ibMessage;

  @NonNull
  public final ImageView imageview;

  @NonNull
  public final TextView inputlabel;

  @NonNull
  public final ConstraintLayout inputlayout;

  @NonNull
  public final TextView inputunit;

  @NonNull
  public final EditText inputview;

  @NonNull
  public final TextView left;

  @NonNull
  public final TextView left1;

  @NonNull
  public final TextView leftamount;

  @NonNull
  public final TextView leveloneCount;

  @NonNull
  public final LinearLayout llTitle;

  @NonNull
  public final TextView myalreadyholdamount;

  @NonNull
  public final ProgressBar progressbar;

  @NonNull
  public final TextView right;

  @NonNull
  public final TextView right1;

  @NonNull
  public final TextView tip;

  @NonNull
  public final TextView tvAmount;

  @NonNull
  public final TextView tvEndTime;

  @NonNull
  public final TextView tvProgressLabel;

  @NonNull
  public final TextView tvStartTime;

  @NonNull
  public final TextView tvTitle;

  @NonNull
  public final TextView tvType;

  @NonNull
  public final TextView tvbalance;

  @NonNull
  public final TextView tvdetail;

  @NonNull
  public final TextView tvlimitamount;

  @NonNull
  public final TextView tvlimttimes;

  @NonNull
  public final TextView tvprogress;

  @NonNull
  public final TextView tvstep;

  private ActivityDetailBinding(@NonNull LinearLayout rootView, @NonNull TextView alreadyamount,
      @NonNull TextView alreadyholdamount, @NonNull ConstraintLayout amountlayout,
      @NonNull TextView balancelabel, @NonNull TextView button, @NonNull LinearLayout contentlayout,
      @NonNull TextView freezeAmount, @NonNull TextView freezetip,
      @NonNull ConstraintLayout holderlayout, @NonNull ImageButton ibBack,
      @NonNull ImageButton ibMessage, @NonNull ImageView imageview, @NonNull TextView inputlabel,
      @NonNull ConstraintLayout inputlayout, @NonNull TextView inputunit,
      @NonNull EditText inputview, @NonNull TextView left, @NonNull TextView left1,
      @NonNull TextView leftamount, @NonNull TextView leveloneCount, @NonNull LinearLayout llTitle,
      @NonNull TextView myalreadyholdamount, @NonNull ProgressBar progressbar,
      @NonNull TextView right, @NonNull TextView right1, @NonNull TextView tip,
      @NonNull TextView tvAmount, @NonNull TextView tvEndTime, @NonNull TextView tvProgressLabel,
      @NonNull TextView tvStartTime, @NonNull TextView tvTitle, @NonNull TextView tvType,
      @NonNull TextView tvbalance, @NonNull TextView tvdetail, @NonNull TextView tvlimitamount,
      @NonNull TextView tvlimttimes, @NonNull TextView tvprogress, @NonNull TextView tvstep) {
    this.rootView = rootView;
    this.alreadyamount = alreadyamount;
    this.alreadyholdamount = alreadyholdamount;
    this.amountlayout = amountlayout;
    this.balancelabel = balancelabel;
    this.button = button;
    this.contentlayout = contentlayout;
    this.freezeAmount = freezeAmount;
    this.freezetip = freezetip;
    this.holderlayout = holderlayout;
    this.ibBack = ibBack;
    this.ibMessage = ibMessage;
    this.imageview = imageview;
    this.inputlabel = inputlabel;
    this.inputlayout = inputlayout;
    this.inputunit = inputunit;
    this.inputview = inputview;
    this.left = left;
    this.left1 = left1;
    this.leftamount = leftamount;
    this.leveloneCount = leveloneCount;
    this.llTitle = llTitle;
    this.myalreadyholdamount = myalreadyholdamount;
    this.progressbar = progressbar;
    this.right = right;
    this.right1 = right1;
    this.tip = tip;
    this.tvAmount = tvAmount;
    this.tvEndTime = tvEndTime;
    this.tvProgressLabel = tvProgressLabel;
    this.tvStartTime = tvStartTime;
    this.tvTitle = tvTitle;
    this.tvType = tvType;
    this.tvbalance = tvbalance;
    this.tvdetail = tvdetail;
    this.tvlimitamount = tvlimitamount;
    this.tvlimttimes = tvlimttimes;
    this.tvprogress = tvprogress;
    this.tvstep = tvstep;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    String missingId;
    missingId: {
      TextView alreadyamount = rootView.findViewById(R.id.alreadyamount);
      if (alreadyamount == null) {
        missingId = "alreadyamount";
        break missingId;
      }
      TextView alreadyholdamount = rootView.findViewById(R.id.alreadyholdamount);
      if (alreadyholdamount == null) {
        missingId = "alreadyholdamount";
        break missingId;
      }
      ConstraintLayout amountlayout = rootView.findViewById(R.id.amountlayout);
      if (amountlayout == null) {
        missingId = "amountlayout";
        break missingId;
      }
      TextView balancelabel = rootView.findViewById(R.id.balancelabel);
      if (balancelabel == null) {
        missingId = "balancelabel";
        break missingId;
      }
      TextView button = rootView.findViewById(R.id.button);
      if (button == null) {
        missingId = "button";
        break missingId;
      }
      LinearLayout contentlayout = rootView.findViewById(R.id.contentlayout);
      if (contentlayout == null) {
        missingId = "contentlayout";
        break missingId;
      }
      TextView freezeAmount = rootView.findViewById(R.id.freezeAmount);
      if (freezeAmount == null) {
        missingId = "freezeAmount";
        break missingId;
      }
      TextView freezetip = rootView.findViewById(R.id.freezetip);
      if (freezetip == null) {
        missingId = "freezetip";
        break missingId;
      }
      ConstraintLayout holderlayout = rootView.findViewById(R.id.holderlayout);
      if (holderlayout == null) {
        missingId = "holderlayout";
        break missingId;
      }
      ImageButton ibBack = rootView.findViewById(R.id.ibBack);
      if (ibBack == null) {
        missingId = "ibBack";
        break missingId;
      }
      ImageButton ibMessage = rootView.findViewById(R.id.ibMessage);
      if (ibMessage == null) {
        missingId = "ibMessage";
        break missingId;
      }
      ImageView imageview = rootView.findViewById(R.id.imageview);
      if (imageview == null) {
        missingId = "imageview";
        break missingId;
      }
      TextView inputlabel = rootView.findViewById(R.id.inputlabel);
      if (inputlabel == null) {
        missingId = "inputlabel";
        break missingId;
      }
      ConstraintLayout inputlayout = rootView.findViewById(R.id.inputlayout);
      if (inputlayout == null) {
        missingId = "inputlayout";
        break missingId;
      }
      TextView inputunit = rootView.findViewById(R.id.inputunit);
      if (inputunit == null) {
        missingId = "inputunit";
        break missingId;
      }
      EditText inputview = rootView.findViewById(R.id.inputview);
      if (inputview == null) {
        missingId = "inputview";
        break missingId;
      }
      TextView left = rootView.findViewById(R.id.left);
      if (left == null) {
        missingId = "left";
        break missingId;
      }
      TextView left1 = rootView.findViewById(R.id.left1);
      if (left1 == null) {
        missingId = "left1";
        break missingId;
      }
      TextView leftamount = rootView.findViewById(R.id.leftamount);
      if (leftamount == null) {
        missingId = "leftamount";
        break missingId;
      }
      TextView leveloneCount = rootView.findViewById(R.id.leveloneCount);
      if (leveloneCount == null) {
        missingId = "leveloneCount";
        break missingId;
      }
      LinearLayout llTitle = rootView.findViewById(R.id.llTitle);
      if (llTitle == null) {
        missingId = "llTitle";
        break missingId;
      }
      TextView myalreadyholdamount = rootView.findViewById(R.id.myalreadyholdamount);
      if (myalreadyholdamount == null) {
        missingId = "myalreadyholdamount";
        break missingId;
      }
      ProgressBar progressbar = rootView.findViewById(R.id.progressbar);
      if (progressbar == null) {
        missingId = "progressbar";
        break missingId;
      }
      TextView right = rootView.findViewById(R.id.right);
      if (right == null) {
        missingId = "right";
        break missingId;
      }
      TextView right1 = rootView.findViewById(R.id.right1);
      if (right1 == null) {
        missingId = "right1";
        break missingId;
      }
      TextView tip = rootView.findViewById(R.id.tip);
      if (tip == null) {
        missingId = "tip";
        break missingId;
      }
      TextView tvAmount = rootView.findViewById(R.id.tvAmount);
      if (tvAmount == null) {
        missingId = "tvAmount";
        break missingId;
      }
      TextView tvEndTime = rootView.findViewById(R.id.tv_end_time);
      if (tvEndTime == null) {
        missingId = "tvEndTime";
        break missingId;
      }
      TextView tvProgressLabel = rootView.findViewById(R.id.tvProgressLabel);
      if (tvProgressLabel == null) {
        missingId = "tvProgressLabel";
        break missingId;
      }
      TextView tvStartTime = rootView.findViewById(R.id.tv_start_time);
      if (tvStartTime == null) {
        missingId = "tvStartTime";
        break missingId;
      }
      TextView tvTitle = rootView.findViewById(R.id.tvTitle);
      if (tvTitle == null) {
        missingId = "tvTitle";
        break missingId;
      }
      TextView tvType = rootView.findViewById(R.id.tvType);
      if (tvType == null) {
        missingId = "tvType";
        break missingId;
      }
      TextView tvbalance = rootView.findViewById(R.id.tvbalance);
      if (tvbalance == null) {
        missingId = "tvbalance";
        break missingId;
      }
      TextView tvdetail = rootView.findViewById(R.id.tvdetail);
      if (tvdetail == null) {
        missingId = "tvdetail";
        break missingId;
      }
      TextView tvlimitamount = rootView.findViewById(R.id.tvlimitamount);
      if (tvlimitamount == null) {
        missingId = "tvlimitamount";
        break missingId;
      }
      TextView tvlimttimes = rootView.findViewById(R.id.tvlimttimes);
      if (tvlimttimes == null) {
        missingId = "tvlimttimes";
        break missingId;
      }
      TextView tvprogress = rootView.findViewById(R.id.tvprogress);
      if (tvprogress == null) {
        missingId = "tvprogress";
        break missingId;
      }
      TextView tvstep = rootView.findViewById(R.id.tvstep);
      if (tvstep == null) {
        missingId = "tvstep";
        break missingId;
      }
      return new ActivityDetailBinding((LinearLayout) rootView, alreadyamount, alreadyholdamount,
          amountlayout, balancelabel, button, contentlayout, freezeAmount, freezetip, holderlayout,
          ibBack, ibMessage, imageview, inputlabel, inputlayout, inputunit, inputview, left, left1,
          leftamount, leveloneCount, llTitle, myalreadyholdamount, progressbar, right, right1, tip,
          tvAmount, tvEndTime, tvProgressLabel, tvStartTime, tvTitle, tvType, tvbalance, tvdetail,
          tvlimitamount, tvlimttimes, tvprogress, tvstep);
    }
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
