// Generated by view binder compiler. Do not edit!
package com.bishang366.databinding;

import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.viewbinding.ViewBinding;
import android.widget.LinearLayout;
import android.widget.TextView;
import com.bishang366.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AdapterTrustNewBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView trustCountKey;

  @NonNull
  public final TextView trustCountValue;

  @NonNull
  public final TextView trustDirection;

  @NonNull
  public final TextView trustPriceKey;

  @NonNull
  public final TextView trustPriceTypeValue;

  @NonNull
  public final TextView trustPriceValue;

  @NonNull
  public final TextView trustSoldValue;

  @NonNull
  public final TextView trustState;

  @NonNull
  public final TextView trustSymbol;

  @NonNull
  public final TextView trustTimeValue;

  @NonNull
  public final TextView trustTotalValue;

  private AdapterTrustNewBinding(@NonNull LinearLayout rootView, @NonNull TextView trustCountKey,
      @NonNull TextView trustCountValue, @NonNull TextView trustDirection,
      @NonNull TextView trustPriceKey, @NonNull TextView trustPriceTypeValue,
      @NonNull TextView trustPriceValue, @NonNull TextView trustSoldValue,
      @NonNull TextView trustState, @NonNull TextView trustSymbol, @NonNull TextView trustTimeValue,
      @NonNull TextView trustTotalValue) {
    this.rootView = rootView;
    this.trustCountKey = trustCountKey;
    this.trustCountValue = trustCountValue;
    this.trustDirection = trustDirection;
    this.trustPriceKey = trustPriceKey;
    this.trustPriceTypeValue = trustPriceTypeValue;
    this.trustPriceValue = trustPriceValue;
    this.trustSoldValue = trustSoldValue;
    this.trustState = trustState;
    this.trustSymbol = trustSymbol;
    this.trustTimeValue = trustTimeValue;
    this.trustTotalValue = trustTotalValue;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AdapterTrustNewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AdapterTrustNewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.adapter_trust_new, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AdapterTrustNewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    String missingId;
    missingId: {
      TextView trustCountKey = rootView.findViewById(R.id.trust_count_key);
      if (trustCountKey == null) {
        missingId = "trustCountKey";
        break missingId;
      }
      TextView trustCountValue = rootView.findViewById(R.id.trust_count_value);
      if (trustCountValue == null) {
        missingId = "trustCountValue";
        break missingId;
      }
      TextView trustDirection = rootView.findViewById(R.id.trust_direction);
      if (trustDirection == null) {
        missingId = "trustDirection";
        break missingId;
      }
      TextView trustPriceKey = rootView.findViewById(R.id.trust_price_key);
      if (trustPriceKey == null) {
        missingId = "trustPriceKey";
        break missingId;
      }
      TextView trustPriceTypeValue = rootView.findViewById(R.id.trust_price_type_value);
      if (trustPriceTypeValue == null) {
        missingId = "trustPriceTypeValue";
        break missingId;
      }
      TextView trustPriceValue = rootView.findViewById(R.id.trust_price_value);
      if (trustPriceValue == null) {
        missingId = "trustPriceValue";
        break missingId;
      }
      TextView trustSoldValue = rootView.findViewById(R.id.trust_sold_value);
      if (trustSoldValue == null) {
        missingId = "trustSoldValue";
        break missingId;
      }
      TextView trustState = rootView.findViewById(R.id.trust_state);
      if (trustState == null) {
        missingId = "trustState";
        break missingId;
      }
      TextView trustSymbol = rootView.findViewById(R.id.trust_symbol);
      if (trustSymbol == null) {
        missingId = "trustSymbol";
        break missingId;
      }
      TextView trustTimeValue = rootView.findViewById(R.id.trust_time_value);
      if (trustTimeValue == null) {
        missingId = "trustTimeValue";
        break missingId;
      }
      TextView trustTotalValue = rootView.findViewById(R.id.trust_total_value);
      if (trustTotalValue == null) {
        missingId = "trustTotalValue";
        break missingId;
      }
      return new AdapterTrustNewBinding((LinearLayout) rootView, trustCountKey, trustCountValue,
          trustDirection, trustPriceKey, trustPriceTypeValue, trustPriceValue, trustSoldValue,
          trustState, trustSymbol, trustTimeValue, trustTotalValue);
    }
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
