// Generated by view binder compiler. Do not edit!
package com.bishang366.databinding;

import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import android.support.constraint.ConstraintLayout;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.viewbinding.ViewBinding;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import com.bishang366.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutSafevalidateBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final LinearLayout bottom;

  @NonNull
  public final TextView btnSubmit;

  @NonNull
  public final ImageView btnclose;

  @NonNull
  public final EditText etCode;

  @NonNull
  public final TextView label;

  @NonNull
  public final LinearLayout top;

  @NonNull
  public final TextView tvGetCode;

  @NonNull
  public final TextView tvmobile;

  private LayoutSafevalidateBinding(@NonNull ConstraintLayout rootView,
      @NonNull LinearLayout bottom, @NonNull TextView btnSubmit, @NonNull ImageView btnclose,
      @NonNull EditText etCode, @NonNull TextView label, @NonNull LinearLayout top,
      @NonNull TextView tvGetCode, @NonNull TextView tvmobile) {
    this.rootView = rootView;
    this.bottom = bottom;
    this.btnSubmit = btnSubmit;
    this.btnclose = btnclose;
    this.etCode = etCode;
    this.label = label;
    this.top = top;
    this.tvGetCode = tvGetCode;
    this.tvmobile = tvmobile;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutSafevalidateBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutSafevalidateBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_safevalidate, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutSafevalidateBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    String missingId;
    missingId: {
      LinearLayout bottom = rootView.findViewById(R.id.bottom);
      if (bottom == null) {
        missingId = "bottom";
        break missingId;
      }
      TextView btnSubmit = rootView.findViewById(R.id.btnSubmit);
      if (btnSubmit == null) {
        missingId = "btnSubmit";
        break missingId;
      }
      ImageView btnclose = rootView.findViewById(R.id.btnclose);
      if (btnclose == null) {
        missingId = "btnclose";
        break missingId;
      }
      EditText etCode = rootView.findViewById(R.id.etCode);
      if (etCode == null) {
        missingId = "etCode";
        break missingId;
      }
      TextView label = rootView.findViewById(R.id.label);
      if (label == null) {
        missingId = "label";
        break missingId;
      }
      LinearLayout top = rootView.findViewById(R.id.top);
      if (top == null) {
        missingId = "top";
        break missingId;
      }
      TextView tvGetCode = rootView.findViewById(R.id.tvGetCode);
      if (tvGetCode == null) {
        missingId = "tvGetCode";
        break missingId;
      }
      TextView tvmobile = rootView.findViewById(R.id.tvmobile);
      if (tvmobile == null) {
        missingId = "tvmobile";
        break missingId;
      }
      return new LayoutSafevalidateBinding((ConstraintLayout) rootView, bottom, btnSubmit, btnclose,
          etCode, label, top, tvGetCode, tvmobile);
    }
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
